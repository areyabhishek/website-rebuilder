{
  "domain": "motherduck.com",
  "nav": [
    {
      "text": "Home",
      "href": "/"
    },
    {
      "text": "Release Notes",
      "href": "/docs/about-motherduck/release-notes/"
    },
    {
      "text": "Ecosystem",
      "href": "/ecosystem/"
    },
    {
      "text": "Taming Wild Csvs With Duckdb Data Engineering",
      "href": "/blog/taming-wild-csvs-with-duckdb-data-engineering/"
    },
    {
      "text": "Announcing Duckdb 110",
      "href": "/2024/09/09/announcing-duckdb-110"
    },
    {
      "text": "Prompt",
      "href": "/docs/sql-reference/motherduck-sql-reference/ai-functions/prompt/"
    }
  ],
  "pages": [
    {
      "url": "https://motherduck.com",
      "slug": "index",
      "title": "MotherDuck: Ducking Simple Data Warehouse based on DuckDB",
      "sections": [
        {
          "type": "hero",
          "h1": "Making Big Data Feel Small",
          "sub": "",
          "cta": "",
          "content": "MotherDuck's first European cloud region is coming![Join the waitlist to get notified.](https://motherduck.com/product/eu-region/?utm_source=eyebrow)\n[Motherduck home](https://motherduck.com/#)\n[Sign Up](https://app.motherduck.com/?auth_flow=signup)\nDuckDB cloud data warehouse scaling to terabytes\nfor customer-facing analytics and BI\n[Try 21 Days Free](https://app.motherduck.com/?auth_flow=signup)\n[LEARN MORE](https://motherduck.com/product/)\n[BOOK A DEMO](https://motherduck.com/contact-us/product-expert/)\n[instant sql blog post](https://motherduck.com/blog/introducing-instant-sql/)\n![DuckDB Book in the clouds](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fduckdb-book-in-the-clouds.d9791904.png&w=3840&q=75)"
        },
        {
          "type": "section",
          "title": "\"DuckDB In Action\" Book for Free",
          "content": "Get the complete book for free in your inbox!\nWork Email\nSubscribe to MotherDuck news\nSubscribe to DuckDB ecosystem newsletter\nSUBMIT\nFINALLY:\nA database you don't hate"
        },
        {
          "type": "section",
          "title": "Why It's Better",
          "content": "![Scales Vertically and Horizontally to handle Spikey Workloads](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-scales.b290b9bc.png&w=3840&q=75)\nScales Vertically and Horizontally to handle Spikey Workloads\n![Reads YOUR data.  (plaintext, json, parquet, iceberg, xls, csv)](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-reads.51fdba51.png&w=3840&q=75)\nReads YOUR data. (plaintext, json, parquet, iceberg, xls, csv)\n![Fast, columnar central data storage optimized for analytics](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-fast.bf89edac.png&w=3840&q=75)\nFast, columnar central data storage optimized for analytics\n![Run locally, deploy to the cloud for reliability and collaboration. Fits into your workflow](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-run-locally.3c9900e8.png&w=3840&q=75)\nRun locally, deploy to the cloud for reliability and collaboration. Fits into your workflow"
        },
        {
          "type": "section",
          "title": "Who is it for?",
          "content": "Analytics that works for everyone\n[![Software Engineers](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-coding-duck.c6c8efa9.png&w=3840&q=75)\\\\\n**Software Engineers** \\\\\nWho ended up with a big data problem](https://motherduck.com/product/app-developers) [![Data Scientists](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-scientist-duck.5805adc0.png&w=3840&q=75)\\\\\n**Data Scientists** \\\\\nWho ended up having to do data engineering](https://motherduck.com/product/duckdb-users) [![Data Engineers](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-plumber-duck.27784453.png&w=3840&q=75)\\\\\n**Data Engineers** \\\\\nWith slow, brittle pipelines](https://motherduck.com/product/data-teams)"
        },
        {
          "type": "section",
          "title": "Who is it for?",
          "content": "Analytics that works for everyone\n[![Software Engineers](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-coding-duck.c6c8efa9.png&w=3840&q=75)\\\\\n**Software Engineers** \\\\\nWho ended up with a big data problem](https://motherduck.com/product/app-developers) [![Data Scientists](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-scientist-duck.5805adc0.png&w=3840&q=75)\\\\\n**Data Scientists** \\\\\nWho ended up having to do data engineering](https://motherduck.com/product/duckdb-users) [![Data Engineers](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-plumber-duck.27784453.png&w=3840&q=75)\\\\\n**Data Engineers** \\\\\nWith slow, brittle pipelines](https://motherduck.com/product/data-teams)\nUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse CasesUse Cases"
        },
        {
          "type": "section",
          "title": "Use Cases",
          "content": "!['For Data Teams' duck illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fdata-teams-ducks.6fea331d.png&w=3840&q=75)!['For App Devs' duck illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fapp-devs-ducks.51eb4ea9.png&w=3840&q=75)\n![For Data Teams ducks](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fdata-teams-ducks.6fea331d.png&w=3840&q=75)\n### Data Warehousing\nIs your data all over the place? Start making sense of your business by bringing it together for internal business intelligence and analytics. Build pure SQL pipelines, share data and quickly collaborate with your team.\n[How it Works](https://motherduck.com/docs/getting-started/data-warehouse/)\n[Case Studies](https://motherduck.com/case-studies/)\n![For App Devs ducks](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fapp-devs-ducks.51eb4ea9.png&w=3840&q=75)\n### Customer-facing Analytics\nUnlike traditional BI, customer-facing analytics is built directly into your product for end users. It delivers near real-time, low-latency insights at scale — think milliseconds, not minutes — and must handle thousands to millions of concurrent queries. MotherDuck's architecture, from per-user tenancy to Wasm support, is designed for the unique requirements of Customer-Facing Analytics to drive increased user engagement directly in your app experience.\n[How it Works](https://motherduck.com/docs/getting-started/customer-facing-analytics/)\n[Case Studies](https://motherduck.com/case-studies/)"
        },
        {
          "type": "section",
          "title": "How We Scale",
          "content": "### Duckling Sizes\nMotherDuck’s per-user tenancy model gives each user an isolated\nduckling\n![Tooltip Duckling illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Ftooltip-duckling-illus.32805477.png&w=3840&q=75)\nA Duckling is a dedicated DuckDB instance for each user, ensuring optimal performance and scalability in data analytics.\n(DuckDB instance) in one of five sizes to enable individual, user-level configuration.\n![MotherDuck Assets illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fmotherduck-assets-illus.f80662b9.png&w=3840&q=75)\n![Pulse Duckling](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fduckling-1-placeholder.8fd25135.png&w=3840&q=75)\n![Pulse Instance type illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Finstance-type-illus-pulse.8c39b9cc.png&w=3840&q=75)\nPulse\nOur smallest instance, perfect for ad-hoc analytics tasks\n![Standard Duckling](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fduckling-2-placeholder.e3942696.png&w=3840&q=75)\n![Standard Instance type illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Finstance-type-illus-standard.3d0ae9e9.png&w=3840&q=75)\nStandard\nBuilt to handle common data warehouse workloads, including loads and transforms\n![Jumbo Duckling](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fduckling-3-placeholder.9e54ea44.png&w=3840&q=75)\n![Jumbo Instance type illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Finstance-type-illus-jumbo.b77c7bca.png&w=3840&q=75)\nJumbo\nFor larger data warehouse workloads with many transformations or complex aggregations\n![Mega Duckling](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fduckling-4-placeholder.356f25ee.png&w=3840&q=75)\n![Mega Instance type illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Finstance-type-illus-mega.cd4cd44f.png&w=3840&q=75)\nMega\nAn extremely large instance for when you need complex transformations done quickly\n![Giga Duckling](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fduckling-5-placeholder.7ca13555.png&w=3840&q=75)\n![Giga Instance type illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Finstance-type-illus-giga.3228dda6.png&w=3840&q=75)\nGiga\nLargest instances enable the toughest transformations to run faster\n[Contact us](https://motherduck.com/contact-us/product-expert/)\n![Magnifying glass duckling sizes illustration](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fmagnifying-glass-duckling-sizes.5db83c77.png&w=3840&q=75)\nTake a closer look at\n[DUCKLING SIZES](https://motherduck.com/product/pricing/#instance-types)\n### Per-user tenancy   and vertical scaling\nMotherDuck employs a per-user tenancy and vertical scaling strategy. Users connect to their own MotherDuck Ducklings (DuckDB instances), which are sized (pulse, standard, jumbo, mega, giga) to meet their specific needs. There is also the option for additional Ducklings, through read scaling (explained below), to ensure flexible resource allocation. Ultimately, each Duckling establishes a connection with the central Data Warehouse storage.\n![Per-user tenancy      and vertical scaling](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhow-we-scale-per-user-tenancy.3641ecda.png&w=3840&q=75)\n### Read Scaling\nMotherDuck's read scaling capabilities allow users to connect via a BI Tool to dedicated Ducklings that function as read replicas. These read replicas can be provisioned in various sizes (pulse, standard, jumbo, mega or giga) to accommodate different needs. Ultimately, these read replicas connect to the Data Warehouse storage, enabling efficient handling of read operations.\n![Read Scaling](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhow-we-scale-read-scaling.a2333854.png&w=3840&q=75)"
        },
        {
          "type": "section",
          "title": "Ecosystem",
          "content": "Modern Duck Stack\n### CLOUD DATA WAREHOUSE\n### Sources\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fpostgres-sql.d737f4f5.png&w=750&q=75)\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Famazon-s3.72386dfc.png&w=640&q=75)\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fsalesforce.35d52b31.png&w=384&q=75)\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fstripe.2160e881.png&w=384&q=75)\n[**Business Intelligence**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Ftableau.0ec523e2.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fpower-bi.f3563826.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fomni.cb7aa381.png&w=384&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fmetabase.5f8fe44e.png&w=640&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Business+Intelligence) [**Ingestion**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Ffivetran.26f3817d.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fairbyte.8371d2f0.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Festuary.babad369.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fdlthub.e9892b97.png&w=384&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Ingestion) [**Data Science & AI**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhex.275dad7d.png&w=256&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fjupyter.2a6af3de.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fcolab.30ab10af.png&w=384&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fmarimo.b699c73d.png&w=640&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Data+Science+%26+AI) [**Reverse ETL**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fcensus.352f1d69.png&w=640&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Reverse+ETL) [**Transformation**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fdbt.fd2184d1.png&w=384&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Ftobiko.d0e3d1e5.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fsql-mesh.6fceb012.png&w=640&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Transformation) [**Dev Tools**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fdatagrip.f48eba23.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fpuppy-graph.848400c6.png&w=750&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fdagster.e1970a7c.png&w=640&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Dev+Tools)\n[**Orchestration**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fairflow.7f70081a.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fdagster.e1970a7c.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fprefect.fd6371b3.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fkestra.aa10acfc.png&w=640&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Orchestration)\n[**Data Quality**\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fmonte-carlo.2143f962.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fsecoda.9b7e86fb.png&w=640&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fsoda.59e5aa02.png&w=384&q=75)\\\\\n\\\\\n![](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fgreat-expectations.c544f1ef.png&w=640&q=75)\\\\\n\\\\\nMORE INFO](https://motherduck.com/ecosystem/?category=Data+Quality)\nI just onboarded some non-technical users to MotherDuck, and I can’t imagine having done so in a different system with this level of ease and lack of intimidation. Between the ‘Filter’ button, Column Explorer, and the FROM syntax - they feel empowered to answer many of their own questions! 🙂\n[READ MORE](https://motherduck.com/blog/dosomething-motherduck-data-warehouse-ROI/)\n![Sahil Gupta's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fsahil_portrait_600bd2844e.png&w=3840&q=75)\nSahil Gupta\nSenior Data Engineer at dosomething.org\nI just onboarded some non-technical users to MotherDuck, and I can’t imagine having done so in a different system with this level of ease and lack of intimidation. Between the ‘Filter’ button, Column Explorer, and the FROM syntax - they feel empowered to answer many of their own questions! 🙂\n[READ MORE](https://motherduck.com/blog/dosomething-motherduck-data-warehouse-ROI/)\nWe used to do analytics in a MySQL database with all of our daily device, telemetry, and image processing data. There was no way to scale that further using MySQL. With MotherDuck, we’re finally starting to find patterns in our data to help customers grow produce more effectively.\n[READ MORE](https://motherduck.com/case-studies/gardyn/)\n![Rob Teeuwen's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2F1689248039646_d0c68f49b7.jpeg&w=3840&q=75)\nRob Teeuwen\nData Scientist at Gardyn\nWe used to do analytics in a MySQL database with all of our daily device, telemetry, and image processing data. There was no way to scale that further using MySQL. With MotherDuck, we’re finally starting to find patterns in our data to help customers grow produce more effectively.\n[READ MORE](https://motherduck.com/case-studies/gardyn/)\nInstant SQL in MotherDuck will save me the misery of having to try and wrangle SQL in my BI tool where iteration speed can be very slow. This lets me get the data right earlier in the process and with faster feedback than waiting for a chart to render, or having to clear an analytics cache.\n[DashFuel](https://www.getdashfuel.com/)\n![Mike McClannahan's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fmike_e96491a8eb.jpeg&w=3840&q=75)\nMike McClannahan\nCTO, DashFuel\nInstant SQL in MotherDuck will save me the misery of having to try and wrangle SQL in my BI tool where iteration speed can be very slow. This lets me get the data right earlier in the process and with faster feedback than waiting for a chart to render, or having to clear an analytics cache.\n[DashFuel](https://www.getdashfuel.com/)\nMotherDuck with DuckDB was by far the fastest of the OLAP platforms we evaluated - both in the cloud and run on our developer's machines - bridging price and performance and greatly increasing productivity.\n[READ MORE](https://motherduck.com/case-studies/saasworks/)\n![Jim O’Neill's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fjim_oneil_photo_930c637f49.jpg&w=3840&q=75)\nJim O’Neill\nCTO and Co-founder at FinQore\nMotherDuck with DuckDB was by far the fastest of the OLAP platforms we evaluated - both in the cloud and run on our developer's machines - bridging price and performance and greatly increasing productivity.\n[READ MORE](https://motherduck.com/case-studies/saasworks/)\nMotherDuck is insanely performant, and there’s no infrastructure to manage. The cost of experimentation is incredibly low — which means we can afford to ask more questions and build more features, faster.\n[READ MORE](https://motherduck.com/case-studies/kultura-capital/)\n![Kristov Paulus's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2FScreenshot_2025_05_08_at_10_29_30_AM_ac663c67b9.png&w=3840&q=75)\nKristov Paulus\nFounder, Chief Investment Officer at Kultura Capital\nMotherDuck is insanely performant, and there’s no infrastructure to manage. The cost of experimentation is incredibly low — which means we can afford to ask more questions and build more features, faster.\n[READ MORE](https://motherduck.com/case-studies/kultura-capital/)\nMotherDuck is the GOAT\n[READ MORE](https://motherduck.com/case-studies/reflex-careers-gig-economy-retail/)\n![Nate Hamm's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fimage_15820c5f78.png&w=3840&q=75)\nNate Hamm\nSr Software Developer at Reflex\nMotherDuck is the GOAT\n[READ MORE](https://motherduck.com/case-studies/reflex-careers-gig-economy-retail/)\nMotherDuck proving once again they are not constrained by what is easy or common. Instant SQL will not only enable complex query construction for those who find the task daunting (everyone?), it'll help past me communicate with future me.\n[DashFuel](https://www.getdashfuel.com/)\n![SJ Browne's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fsj_contemplating_6411ae5dcf.jpg&w=3840&q=75)\nSJ Browne\nSoftware Engineer at DashFuel\nMotherDuck proving once again they are not constrained by what is easy or common. Instant SQL will not only enable complex query construction for those who find the task daunting (everyone?), it'll help past me communicate with future me.\n[DashFuel](https://www.getdashfuel.com/)\nBringing MotherDuck into our data stack has been a game changer. We're reducing friction and supercharging our dev and ops experience by leveraging the DuckDB interoperability across local and cloud.\n[READ MORE](https://motherduck.com/case-studies/dexibit/)\n![Ravi Chandra's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fravi_chandra_photo_7db3a4c457.jpg&w=3840&q=75)\nRavi Chandra\nCTO at Dexibit\nBringing MotherDuck into our data stack has been a game changer. We're reducing friction and supercharging our dev and ops experience by leveraging the DuckDB interoperability across local and cloud.\n[READ MORE](https://motherduck.com/case-studies/dexibit/)\nWe found that DuckDB and MotherDuck are amazing tools for small data teams like ours.\n[READ MORE](https://motherduck.com/case-studies/dosomething-non-profit-tco-cost-savings/)\n![Dave Crusoe's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2F1515814825678_e2e8b2e5e7.jpeg&w=3840&q=75)\nDave Crusoe\nVP of Product & Engineering at DoSomething\nWe found that DuckDB and MotherDuck are amazing tools for small data teams like ours.\n[READ MORE](https://motherduck.com/case-studies/dosomething-non-profit-tco-cost-savings/)\nMoving to MotherDuck, a billed by-the-second cloud offering is a no-brainer for us, considering the elegance and efficiency of a single node system compared to traditional OLAP solutions.\n[ATM.COM](https://atm.com/)\n![Nico Ritschel's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fnico_ritschel_photo_41ba132b33.jpg&w=3840&q=75)\nNico Ritschel\nDirector of Engineering at atm.com\nMoving to MotherDuck, a billed by-the-second cloud offering is a no-brainer for us, considering the elegance and efficiency of a single node system compared to traditional OLAP solutions.\n[ATM.COM](https://atm.com/)\nDuckDB has a lot of folks in the data community excited—it's a new and unique tool in practitioners' toolboxes and has captured the imaginations of many. MotherDuck's efforts bringing DuckDB to the cloud will broaden the reach of this promising technology.\n[DBT LABS](https://www.getdbt.com/)\n![Tristan Handy's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Ftristan_handy_photo_ef2233a588.jpg&w=3840&q=75)\nTristan Handy\nCEO & Founder at dbt Labs\nDuckDB has a lot of folks in the data community excited—it's a new and unique tool in practitioners' toolboxes and has captured the imaginations of many. MotherDuck's efforts bringing DuckDB to the cloud will broaden the reach of this promising technology.\n[DBT LABS](https://www.getdbt.com/)\nI just onboarded some non-technical users to MotherDuck, and I can’t imagine having done so in a different system with this level of ease and lack of intimidation. Between the ‘Filter’ button, Column Explorer, and the FROM syntax - they feel empowered to answer many of their own questions! 🙂\n[READ MORE](https://motherduck.com/blog/dosomething-motherduck-data-warehouse-ROI/)\n![Sahil Gupta's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fsahil_portrait_600bd2844e.png&w=3840&q=75)\nSahil Gupta\nSenior Data Engineer at dosomething.org\nI just onboarded some non-technical users to MotherDuck, and I can’t imagine having done so in a different system with this level of ease and lack of intimidation. Between the ‘Filter’ button, Column Explorer, and the FROM syntax - they feel empowered to answer many of their own questions! 🙂\n[READ MORE](https://motherduck.com/blog/dosomething-motherduck-data-warehouse-ROI/)\nWe used to do analytics in a MySQL database with all of our daily device, telemetry, and image processing data. There was no way to scale that further using MySQL. With MotherDuck, we’re finally starting to find patterns in our data to help customers grow produce more effectively.\n[READ MORE](https://motherduck.com/case-studies/gardyn/)\n![Rob Teeuwen's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2F1689248039646_d0c68f49b7.jpeg&w=3840&q=75)\nRob Teeuwen\nData Scientist at Gardyn\nWe used to do analytics in a MySQL database with all of our daily device, telemetry, and image processing data. There was no way to scale that further using MySQL. With MotherDuck, we’re finally starting to find patterns in our data to help customers grow produce more effectively.\n[READ MORE](https://motherduck.com/case-studies/gardyn/)\nInstant SQL in MotherDuck will save me the misery of having to try and wrangle SQL in my BI tool where iteration speed can be very slow. This lets me get the data right earlier in the process and with faster feedback than waiting for a chart to render, or having to clear an analytics cache.\n[DashFuel](https://www.getdashfuel.com/)\n![Mike McClannahan's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fmike_e96491a8eb.jpeg&w=3840&q=75)\nMike McClannahan\nCTO, DashFuel\nInstant SQL in MotherDuck will save me the misery of having to try and wrangle SQL in my BI tool where iteration speed can be very slow. This lets me get the data right earlier in the process and with faster feedback than waiting for a chart to render, or having to clear an analytics cache.\n[DashFuel](https://www.getdashfuel.com/)\nMotherDuck with DuckDB was by far the fastest of the OLAP platforms we evaluated - both in the cloud and run on our developer's machines - bridging price and performance and greatly increasing productivity.\n[READ MORE](https://motherduck.com/case-studies/saasworks/)\n![Jim O’Neill's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fjim_oneil_photo_930c637f49.jpg&w=3840&q=75)\nJim O’Neill\nCTO and Co-founder at FinQore\nMotherDuck with DuckDB was by far the fastest of the OLAP platforms we evaluated - both in the cloud and run on our developer's machines - bridging price and performance and greatly increasing productivity.\n[READ MORE](https://motherduck.com/case-studies/saasworks/)\nMotherDuck is insanely performant, and there’s no infrastructure to manage. The cost of experimentation is incredibly low — which means we can afford to ask more questions and build more features, faster.\n[READ MORE](https://motherduck.com/case-studies/kultura-capital/)\n![Kristov Paulus's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2FScreenshot_2025_05_08_at_10_29_30_AM_ac663c67b9.png&w=3840&q=75)\nKristov Paulus\nFounder, Chief Investment Officer at Kultura Capital\nMotherDuck is insanely performant, and there’s no infrastructure to manage. The cost of experimentation is incredibly low — which means we can afford to ask more questions and build more features, faster.\n[READ MORE](https://motherduck.com/case-studies/kultura-capital/)\nMotherDuck is the GOAT\n[READ MORE](https://motherduck.com/case-studies/reflex-careers-gig-economy-retail/)\n![Nate Hamm's photo](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fimage_15820c5f78.png&w=3840&q=75)\nNate Hamm\nSr Software Developer at Reflex\nMotherDuck is the GOAT\n[READ MORE](https://motherduck.com/case-studies/reflex-careers-gig-economy-retail/)"
        },
        {
          "type": "section",
          "title": "Our Community",
          "content": "[![Ryan Dolley profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fryan_dolley_a1178e8a04.jpeg&w=96&q=75)\\\\\n\\\\\nRyan Dolley\\\\\n\\\\\nryandolley\\\\\n\\\\\nMotherDuck ... bringing big innovation to SQL to make it more like a real language and less like a 'groovy ancient programming language from the 70s.' Check it out.](https://www.linkedin.com/posts/ryandolley_duckdb-activity-7320941264818884609-1fij?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![Robert Lancer profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Frobert_lancer_e5d68edd81.jpeg&w=96&q=75)\\\\\n\\\\\nRobert Lancer\\\\\n\\\\\nrobertlancer\\\\\n\\\\\nThe progress on the MotherDuck UI is amazing! It went from minimal utility to my preferred place to write SQL in a matter of months](https://www.linkedin.com/feed/update/urn:li:ugcPost:7163558312741982208?commentUrn=ur[%E2%80%A6]89847054557184%2Curn%3Ali%3AugcPost%3A7163558312741982208%29)\n[![Caleb Fahlgren profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1716604301563289600%2FYycgFNAn_400x400.jpg&w=96&q=75)\\\\\n\\\\\nCaleb Fahlgren\\\\\n\\\\\n@calebfahlgren\\\\\n\\\\\nThe amount of data I am storing in \\\\\n@motherduck rn for a new project is criminal 🤣\\\\\nDecided to try it out since I am a big \\\\\n@duckdb user. Is pretty good so far. Have few hundred million records.](https://x.com/calebfahlgren)\n[![Simon Späti 🏔️ profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1137678291605676032%2FITc3M_ah_400x400.png&w=96&q=75)\\\\\n\\\\\nSimon Späti 🏔️\\\\\n\\\\\n@sspaeti\\\\\n\\\\\nI'm just checking a little about the hosted DuckDB by @motherduck. What a nice user experience. It automatically detects errors, and \\`accept & run\\` fixes common errors. Love it.](https://x.com/sspaeti/status/1798290369110749458)\n[![Jacob Matson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1278773580122054656%2F3SG9rUwl_x96.jpg&w=96&q=75)\\\\\n\\\\\nJacob Matson\\\\\n\\\\\n@matsonj\\\\\n\\\\\nusing sql for data cleaning vs excel (reason 879 to learn sql)\\\\\n\\\\\nlevenstein distance between 590strings in excel (350k combinations): \\\\\nexcel: 25 mins of spinning. \\\\\nduckdb: 1.2s](https://twitter.com/matsonj/status/1669434599095816192)\n[![Bob Currier profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fbob_currier_d620fb0c2d.jpeg&w=96&q=75)\\\\\n\\\\\nBob Currier\\\\\n\\\\\nbobcurrier\\\\\n\\\\\nIf you're not familiar with DuckDB, you definitely want to give it a look. I've recently converted all my existing code from using CSV files and SQLite databases for exploratory analysis to parquet files, DuckDB and MotherDuck. The transformation in my workflow has been nothing short of astounding. 10GB of CSV files turned into 1GB of parquet files that are now stored in S3 buckets. Using DuckDB and MotherDuck, I can run exploratory queries seamlessly thanks to the DuckStack with dual execution with local processing and cloud scale. My query development time has decreased by 90%. And I'm loving the team feature of the MotherDuck platform. OCEANCODA is rocking the small data life! #duckdb #python #motherduck #eda #ai #ml (Graphic courtesy of Manning Publications Co. book 'DuckDB in Action.' ) Check it out.](https://www.linkedin.com/feed/update/urn:li:activity:7221573493295910912/)\n[![evidence profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1699896475864510464%2F_XFRsLSv_400x400.jpg&w=96&q=75)\\\\\n\\\\\nevidence\\\\\n\\\\\n@evidence\\_dev\\\\\n\\\\\nDuckDB is increasingly being built into every data tool, but DuckDB isn't designed to be used as a cloud data warehouse\\\\\n\\\\\n@motherduck is solving that problem, and they’re doing it in a delightful, uniquely DuckDB way](https://x.com/evidence_dev/status/1801630536252768584)\n[![Ethan profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1530999951609606144%2FPhNCpNOa_400x400.jpg&w=96&q=75)\\\\\n\\\\\nEthan\\\\\n\\\\\n@@ethanf\\_17\\\\\n\\\\\nDuckDB is my new best friend for analytics. It's so fast, makes it easy to manipulate dataframes, ingests anything, and exports it to whatever form I want. \\\\\n\\\\\nParquet, Arrow dataframes, and DuckDB are the future for analytics.](https://x.com/ethanf_17/status/1809835395695407529)\n[![uwe geercken profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1297147628%2FMyAvatar_x96.png&w=96&q=75)\\\\\n\\\\\nuwe geercken\\\\\n\\\\\n@uweeegeee\\\\\n\\\\\n#duckdb is really impressive: good terminal client, solid, easy and fast import of csv data and impressive speed on a 20mio data set. With automatic schema creation. Easy export to parquet and more. I think I am gonna spend more time on it...](https://twitter.com/uweeegeee/status/1611663518033498117)\n[![Etienne Posthumus profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1564546125352271882%2FxFZq7oWV.jpg&w=96&q=75)\\\\\n\\\\\nEtienne Posthumus\\\\\n\\\\\n@epoz\\\\\n\\\\\nI have been kicking the tyres of @motherduck - and it is 🤯\\\\\n\\\\\nBeing able to do hybrid queries over local and humongous remote datasets are incredible.\\\\\n\\\\\nThe potential applications are making my head spin with awe and excitement. Well done.](https://twitter.com/epoz/status/1688924943806013441)\n[![Jamin Ball profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1346111891618189312%2FSQzYMMst_x96.jpg&w=96&q=75)\\\\\n\\\\\nJamin Ball\\\\\n\\\\\n@jaminball\\\\\n\\\\\nAnother awesome & insightful post from the @motherduck team. The last few decades have been about scale-out. The next decade will be about scale-up! What you can accomplish with a single machine these days is incredibly impressive](https://twitter.com/jaminball/status/1659324081848864768)\n[![Danny Blumenthal profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2FDanny_Blumenthal_7bb40ab793.jpeg&w=96&q=75)\\\\\n\\\\\nDanny Blumenthal\\\\\n\\\\\ndpblumenthal\\\\\n\\\\\nOur friends at MotherDuck stand out in the data space for how consistently they keep shipping awesome new features.](https://www.linkedin.com/posts/dpblumenthal_instant-sql-is-here-activity-7321571222222217218-mAm5/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![Nico Ritschel profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1671183451771527169%2Fg6RdaL5q_x96.jpg&w=96&q=75)\\\\\n\\\\\nNico Ritschel\\\\\n\\\\\n@nicoritschel\\\\\n\\\\\nI just deployed to Rill cloud backed by Motherduck and it worked great— wonderful experience...\\\\\nIn-browser CLI auth with Rill Cloud, added my Motherduck token, invited some viewers, I'm live. Took 3 minutes.](https://twitter.com/nicoritschel/status/1686595084454961152)\n[![Damon Cortesi profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1551732159416635392%2FIFOUWmsD_x96.jpg&w=96&q=75)\\\\\n\\\\\nDamon Cortesi\\\\\n\\\\\n@dacort\\\\\n\\\\\nBecause, I don't have enough time on my hands, I created a DuckDB extension that allows you to import data by scanning an Athena table. \\\\\n\\\\\nhttps://github.com/dacort/duckdb-athena-extension](https://twitter.com/dacort/status/1633952720561516544)\n[![George Fraser profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1571011203736174593%2FobtbMbnD_x96.jpg&w=96&q=75)\\\\\n\\\\\nGeorge Fraser\\\\\n\\\\\n@frasergeorgew\\\\\n\\\\\nHow fast is DuckDB compared to the best commercial data warehouses? I decided to benchmark it myself. Short version: very fast! But it's not (yet) great at scaling up to many cores. https://fivetran.com/blog/how-fast-is-duckdb-really](https://twitter.com/frasergeorgew/status/1638314840488923139)\n[![MotherDuck profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmedia.licdn.com%2Fdms%2Fimage%2Fv2%2FD560BAQEODuOUOAdoQg%2Fcompany-logo_100_100%2FB56ZfmzIGPG0AQ-%2F0%2F1751923851982%2Fmotherduck_logo%3Fe%3D1762992000%26v%3Dbeta%26t%3DelhKxwqBElgX_PNnhA3vQAu8QdPUILGxxa4doqv60-w&w=96&q=75)\\\\\n\\\\\nMotherDuck\\\\\n\\\\\n@motherduck\\\\\n\\\\\n@duckdb is empowering machine learning use cases! 🤖\\\\\nAny good model training starts with some good data exploration.\\\\\n\\\\\n@huggingface now enables SQL queries using DuckDB on any dataset stored on the Hub!](https://twitter.com/motherduck/status/1666804451552935938)\n[![DuckDB profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1274363897676521474%2FqgbqYYuV_x96.jpg&w=96&q=75)\\\\\n\\\\\nDuckDB\\\\\n\\\\\n@duckdb\\\\\n\\\\\nDuckDB Co-Creator @hfmuehleisen and MotherDuck Founder @jrdntgn in this new podcast - among other things about the origin story of DuckDB and later MotherDuck:](https://twitter.com/duckdb/status/1649305101570306048)\n[![Garrett McClintock profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1438016780060950531%2FCn11Ke8O_400x400.jpg&w=96&q=75)\\\\\n\\\\\nGarrett McClintock\\\\\n\\\\\n@GJMcClintock\\\\\n\\\\\njust built a pipeline using @dltHub and @motherduck and it's very nice. 10/10 experience once you get the hang of it and very scalable.](https://x.com/GJMcClintock/status/1800962608939303002)\n[![Andrew Madson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2F1706413992317_120c2864d9.jpeg&w=96&q=75)\\\\\n\\\\\nAndrew Madson\\\\\n\\\\\nandrew-madsen\\\\\n\\\\\nInstant SQL! This is one of the highlights of Data Council... Instant SQL caches a sample of your table instantly, and synchronously updates the query results, AS YOU TYPE!](https://www.linkedin.com/posts/andrew-madson_duckdb-instant-sql-this-is-one-of-the-activity-7321023818074894336-sbar?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![KKovacs [ス] profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F995607718508589058%2FtQPO3yiD_400x400.jpg&w=96&q=75)\\\\\n\\\\\nKKovacs \\[ス\\]\\\\\n\\\\\n@kkovacs\\\\\n\\\\\nI don’t want to say that #DuckDB is a silver bullet because there is no such thing, but it’s surprisingly projectile-shaped, very shiny, and killed all the various werewolves (ok, data problems) I’ve thrown at it](https://twitter.com/kkovacs/status/1801607688889012587)\n[![evidence profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1699896475864510464%2F_XFRsLSv_400x400.jpg&w=96&q=75)\\\\\n\\\\\nevidence\\\\\n\\\\\n@evidence\\_dev\\\\\n\\\\\nDuckDB is increasingly being built into every data tool, but DuckDB isn't designed to be used as a cloud data warehouse\\\\\n\\\\\n@motherduck\\\\\nis solving that problem, and they’re doing it in a delightful, uniquely DuckDB way...](https://twitter.com/evidence_dev/status/1801630536252768584)\n[![Zach Wilson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmedia.licdn.com%2Fdms%2Fimage%2Fv2%2FD5603AQGLd4zOUXaJJg%2Fprofile-displayphoto-shrink_200_200%2FB56ZcbuHVJHUAY-%2F0%2F1748516763636%3Fe%3D1762992000%26v%3Dbeta%26t%3DXmqD42PALO0Cur0sGLHL8Wo_3RMwSo9tGHycq0jpFI8&w=96&q=75)\\\\\n\\\\\nZach Wilson\\\\\n\\\\\neczachly\\\\\n\\\\\nMatt Martin and I did a runtime benchmark of Apache Spark vs DuckDB (by MotherDuck)\\\\\nWe found that data sets under 20 gigabytes ran about 100 times faster on DuckDB than they did on Apache Spark!\\\\\n\\\\\nThis benchmark uses plain parquet files and COUNT distinct to truly measure performance without skipping any data so we know the differences are correct.\\\\\n\\\\\nHere's the complete writeup: https://lnkd.in/gXuWGWyy](https://www.linkedin.com/posts/eczachly_matt-martin-and-i-did-a-runtime-benchmark-activity-7376304145978310657-GzkR/)\n[![Ryan Dolley profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fryan_dolley_a1178e8a04.jpeg&w=96&q=75)\\\\\n\\\\\nRyan Dolley\\\\\n\\\\\nryandolley\\\\\n\\\\\nMotherDuck ... bringing big innovation to SQL to make it more like a real language and less like a 'groovy ancient programming language from the 70s.' Check it out.](https://www.linkedin.com/posts/ryandolley_duckdb-activity-7320941264818884609-1fij?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![Robert Lancer profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Frobert_lancer_e5d68edd81.jpeg&w=96&q=75)\\\\\n\\\\\nRobert Lancer\\\\\n\\\\\nrobertlancer\\\\\n\\\\\nThe progress on the MotherDuck UI is amazing! It went from minimal utility to my preferred place to write SQL in a matter of months](https://www.linkedin.com/feed/update/urn:li:ugcPost:7163558312741982208?commentUrn=ur[%E2%80%A6]89847054557184%2Curn%3Ali%3AugcPost%3A7163558312741982208%29)\n[![Caleb Fahlgren profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1716604301563289600%2FYycgFNAn_400x400.jpg&w=96&q=75)\\\\\n\\\\\nCaleb Fahlgren\\\\\n\\\\\n@calebfahlgren\\\\\n\\\\\nThe amount of data I am storing in \\\\\n@motherduck rn for a new project is criminal 🤣\\\\\nDecided to try it out since I am a big \\\\\n@duckdb user. Is pretty good so far. Have few hundred million records.](https://x.com/calebfahlgren)\n[![Simon Späti 🏔️ profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1137678291605676032%2FITc3M_ah_400x400.png&w=96&q=75)\\\\\n\\\\\nSimon Späti 🏔️\\\\\n\\\\\n@sspaeti\\\\\n\\\\\nI'm just checking a little about the hosted DuckDB by @motherduck. What a nice user experience. It automatically detects errors, and \\`accept & run\\` fixes common errors. Love it.](https://x.com/sspaeti/status/1798290369110749458)\n[![Jacob Matson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1278773580122054656%2F3SG9rUwl_x96.jpg&w=96&q=75)\\\\\n\\\\\nJacob Matson\\\\\n\\\\\n@matsonj\\\\\n\\\\\nusing sql for data cleaning vs excel (reason 879 to learn sql)\\\\\n\\\\\nlevenstein distance between 590strings in excel (350k combinations): \\\\\nexcel: 25 mins of spinning. \\\\\nduckdb: 1.2s](https://twitter.com/matsonj/status/1669434599095816192)\n[![Bob Currier profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fbob_currier_d620fb0c2d.jpeg&w=96&q=75)\\\\\n\\\\\nBob Currier\\\\\n\\\\\nbobcurrier\\\\\n\\\\\nIf you're not familiar with DuckDB, you definitely want to give it a look. I've recently converted all my existing code from using CSV files and SQLite databases for exploratory analysis to parquet files, DuckDB and MotherDuck. The transformation in my workflow has been nothing short of astounding. 10GB of CSV files turned into 1GB of parquet files that are now stored in S3 buckets. Using DuckDB and MotherDuck, I can run exploratory queries seamlessly thanks to the DuckStack with dual execution with local processing and cloud scale. My query development time has decreased by 90%. And I'm loving the team feature of the MotherDuck platform. OCEANCODA is rocking the small data life! #duckdb #python #motherduck #eda #ai #ml (Graphic courtesy of Manning Publications Co. book 'DuckDB in Action.' ) Check it out.](https://www.linkedin.com/feed/update/urn:li:activity:7221573493295910912/)\n[![evidence profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1699896475864510464%2F_XFRsLSv_400x400.jpg&w=96&q=75)\\\\\n\\\\\nevidence\\\\\n\\\\\n@evidence\\_dev\\\\\n\\\\\nDuckDB is increasingly being built into every data tool, but DuckDB isn't designed to be used as a cloud data warehouse\\\\\n\\\\\n@motherduck is solving that problem, and they’re doing it in a delightful, uniquely DuckDB way](https://x.com/evidence_dev/status/1801630536252768584)\n[![Ethan profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1530999951609606144%2FPhNCpNOa_400x400.jpg&w=96&q=75)\\\\\n\\\\\nEthan\\\\\n\\\\\n@@ethanf\\_17\\\\\n\\\\\nDuckDB is my new best friend for analytics. It's so fast, makes it easy to manipulate dataframes, ingests anything, and exports it to whatever form I want. \\\\\n\\\\\nParquet, Arrow dataframes, and DuckDB are the future for analytics.](https://x.com/ethanf_17/status/1809835395695407529)\n[![uwe geercken profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1297147628%2FMyAvatar_x96.png&w=96&q=75)\\\\\n\\\\\nuwe geercken\\\\\n\\\\\n@uweeegeee\\\\\n\\\\\n#duckdb is really impressive: good terminal client, solid, easy and fast import of csv data and impressive speed on a 20mio data set. With automatic schema creation. Easy export to parquet and more. I think I am gonna spend more time on it...](https://twitter.com/uweeegeee/status/1611663518033498117)\n[![Etienne Posthumus profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1564546125352271882%2FxFZq7oWV.jpg&w=96&q=75)\\\\\n\\\\\nEtienne Posthumus\\\\\n\\\\\n@epoz\\\\\n\\\\\nI have been kicking the tyres of @motherduck - and it is 🤯\\\\\n\\\\\nBeing able to do hybrid queries over local and humongous remote datasets are incredible.\\\\\n\\\\\nThe potential applications are making my head spin with awe and excitement. Well done.](https://twitter.com/epoz/status/1688924943806013441)\n[![Jamin Ball profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1346111891618189312%2FSQzYMMst_x96.jpg&w=96&q=75)\\\\\n\\\\\nJamin Ball\\\\\n\\\\\n@jaminball\\\\\n\\\\\nAnother awesome & insightful post from the @motherduck team. The last few decades have been about scale-out. The next decade will be about scale-up! What you can accomplish with a single machine these days is incredibly impressive](https://twitter.com/jaminball/status/1659324081848864768)\n[![Danny Blumenthal profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2FDanny_Blumenthal_7bb40ab793.jpeg&w=96&q=75)\\\\\n\\\\\nDanny Blumenthal\\\\\n\\\\\ndpblumenthal\\\\\n\\\\\nOur friends at MotherDuck stand out in the data space for how consistently they keep shipping awesome new features.](https://www.linkedin.com/posts/dpblumenthal_instant-sql-is-here-activity-7321571222222217218-mAm5/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![Nico Ritschel profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1671183451771527169%2Fg6RdaL5q_x96.jpg&w=96&q=75)\\\\\n\\\\\nNico Ritschel\\\\\n\\\\\n@nicoritschel\\\\\n\\\\\nI just deployed to Rill cloud backed by Motherduck and it worked great— wonderful experience...\\\\\nIn-browser CLI auth with Rill Cloud, added my Motherduck token, invited some viewers, I'm live. Took 3 minutes.](https://twitter.com/nicoritschel/status/1686595084454961152)\n[![Damon Cortesi profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1551732159416635392%2FIFOUWmsD_x96.jpg&w=96&q=75)\\\\\n\\\\\nDamon Cortesi\\\\\n\\\\\n@dacort\\\\\n\\\\\nBecause, I don't have enough time on my hands, I created a DuckDB extension that allows you to import data by scanning an Athena table. \\\\\n\\\\\nhttps://github.com/dacort/duckdb-athena-extension](https://twitter.com/dacort/status/1633952720561516544)\n[![George Fraser profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1571011203736174593%2FobtbMbnD_x96.jpg&w=96&q=75)\\\\\n\\\\\nGeorge Fraser\\\\\n\\\\\n@frasergeorgew\\\\\n\\\\\nHow fast is DuckDB compared to the best commercial data warehouses? I decided to benchmark it myself. Short version: very fast! But it's not (yet) great at scaling up to many cores. https://fivetran.com/blog/how-fast-is-duckdb-really](https://twitter.com/frasergeorgew/status/1638314840488923139)\n[![MotherDuck profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmedia.licdn.com%2Fdms%2Fimage%2Fv2%2FD560BAQEODuOUOAdoQg%2Fcompany-logo_100_100%2FB56ZfmzIGPG0AQ-%2F0%2F1751923851982%2Fmotherduck_logo%3Fe%3D1762992000%26v%3Dbeta%26t%3DelhKxwqBElgX_PNnhA3vQAu8QdPUILGxxa4doqv60-w&w=96&q=75)\\\\\n\\\\\nMotherDuck\\\\\n\\\\\n@motherduck\\\\\n\\\\\n@duckdb is empowering machine learning use cases! 🤖\\\\\nAny good model training starts with some good data exploration.\\\\\n\\\\\n@huggingface now enables SQL queries using DuckDB on any dataset stored on the Hub!](https://twitter.com/motherduck/status/1666804451552935938)\n[![DuckDB profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1274363897676521474%2FqgbqYYuV_x96.jpg&w=96&q=75)\\\\\n\\\\\nDuckDB\\\\\n\\\\\n@duckdb\\\\\n\\\\\nDuckDB Co-Creator @hfmuehleisen and MotherDuck Founder @jrdntgn in this new podcast - among other things about the origin story of DuckDB and later MotherDuck:](https://twitter.com/duckdb/status/1649305101570306048)\n[![Garrett McClintock profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1438016780060950531%2FCn11Ke8O_400x400.jpg&w=96&q=75)\\\\\n\\\\\nGarrett McClintock\\\\\n\\\\\n@GJMcClintock\\\\\n\\\\\njust built a pipeline using @dltHub and @motherduck and it's very nice. 10/10 experience once you get the hang of it and very scalable.](https://x.com/GJMcClintock/status/1800962608939303002)\n[![Andrew Madson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2F1706413992317_120c2864d9.jpeg&w=96&q=75)\\\\\n\\\\\nAndrew Madson\\\\\n\\\\\nandrew-madsen\\\\\n\\\\\nInstant SQL! This is one of the highlights of Data Council... Instant SQL caches a sample of your table instantly, and synchronously updates the query results, AS YOU TYPE!](https://www.linkedin.com/posts/andrew-madson_duckdb-instant-sql-this-is-one-of-the-activity-7321023818074894336-sbar?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![KKovacs [ス] profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F995607718508589058%2FtQPO3yiD_400x400.jpg&w=96&q=75)\\\\\n\\\\\nKKovacs \\[ス\\]\\\\\n\\\\\n@kkovacs\\\\\n\\\\\nI don’t want to say that #DuckDB is a silver bullet because there is no such thing, but it’s surprisingly projectile-shaped, very shiny, and killed all the various werewolves (ok, data problems) I’ve thrown at it](https://twitter.com/kkovacs/status/1801607688889012587)\n[![evidence profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1699896475864510464%2F_XFRsLSv_400x400.jpg&w=96&q=75)\\\\\n\\\\\nevidence\\\\\n\\\\\n@evidence\\_dev\\\\\n\\\\\nDuckDB is increasingly being built into every data tool, but DuckDB isn't designed to be used as a cloud data warehouse\\\\\n\\\\\n@motherduck\\\\\nis solving that problem, and they’re doing it in a delightful, uniquely DuckDB way...](https://twitter.com/evidence_dev/status/1801630536252768584)\n[![Zach Wilson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmedia.licdn.com%2Fdms%2Fimage%2Fv2%2FD5603AQGLd4zOUXaJJg%2Fprofile-displayphoto-shrink_200_200%2FB56ZcbuHVJHUAY-%2F0%2F1748516763636%3Fe%3D1762992000%26v%3Dbeta%26t%3DXmqD42PALO0Cur0sGLHL8Wo_3RMwSo9tGHycq0jpFI8&w=96&q=75)\\\\\n\\\\\nZach Wilson\\\\\n\\\\\neczachly\\\\\n\\\\\nMatt Martin and I did a runtime benchmark of Apache Spark vs DuckDB (by MotherDuck)\\\\\nWe found that data sets under 20 gigabytes ran about 100 times faster on DuckDB than they did on Apache Spark!\\\\\n\\\\\nThis benchmark uses plain parquet files and COUNT distinct to truly measure performance without skipping any data so we know the differences are correct.\\\\\n\\\\\nHere's the complete writeup: https://lnkd.in/gXuWGWyy](https://www.linkedin.com/posts/eczachly_matt-martin-and-i-did-a-runtime-benchmark-activity-7376304145978310657-GzkR/)\n[![Ryan Dolley profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fryan_dolley_a1178e8a04.jpeg&w=96&q=75)\\\\\n\\\\\nRyan Dolley\\\\\n\\\\\nryandolley\\\\\n\\\\\nMotherDuck ... bringing big innovation to SQL to make it more like a real language and less like a 'groovy ancient programming language from the 70s.' Check it out.](https://www.linkedin.com/posts/ryandolley_duckdb-activity-7320941264818884609-1fij?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![Robert Lancer profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Frobert_lancer_e5d68edd81.jpeg&w=96&q=75)\\\\\n\\\\\nRobert Lancer\\\\\n\\\\\nrobertlancer\\\\\n\\\\\nThe progress on the MotherDuck UI is amazing! It went from minimal utility to my preferred place to write SQL in a matter of months](https://www.linkedin.com/feed/update/urn:li:ugcPost:7163558312741982208?commentUrn=ur[%E2%80%A6]89847054557184%2Curn%3Ali%3AugcPost%3A7163558312741982208%29)\n[![Caleb Fahlgren profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1716604301563289600%2FYycgFNAn_400x400.jpg&w=96&q=75)\\\\\n\\\\\nCaleb Fahlgren\\\\\n\\\\\n@calebfahlgren\\\\\n\\\\\nThe amount of data I am storing in \\\\\n@motherduck rn for a new project is criminal 🤣\\\\\nDecided to try it out since I am a big \\\\\n@duckdb user. Is pretty good so far. Have few hundred million records.](https://x.com/calebfahlgren)\n[![Simon Späti 🏔️ profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1137678291605676032%2FITc3M_ah_400x400.png&w=96&q=75)\\\\\n\\\\\nSimon Späti 🏔️\\\\\n\\\\\n@sspaeti\\\\\n\\\\\nI'm just checking a little about the hosted DuckDB by @motherduck. What a nice user experience. It automatically detects errors, and \\`accept & run\\` fixes common errors. Love it.](https://x.com/sspaeti/status/1798290369110749458)\n[![Jacob Matson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1278773580122054656%2F3SG9rUwl_x96.jpg&w=96&q=75)\\\\\n\\\\\nJacob Matson\\\\\n\\\\\n@matsonj\\\\\n\\\\\nusing sql for data cleaning vs excel (reason 879 to learn sql)\\\\\n\\\\\nlevenstein distance between 590strings in excel (350k combinations): \\\\\nexcel: 25 mins of spinning. \\\\\nduckdb: 1.2s](https://twitter.com/matsonj/status/1669434599095816192)\n[![Bob Currier profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fbob_currier_d620fb0c2d.jpeg&w=96&q=75)\\\\\n\\\\\nBob Currier\\\\\n\\\\\nbobcurrier\\\\\n\\\\\nIf you're not familiar with DuckDB, you definitely want to give it a look. I've recently converted all my existing code from using CSV files and SQLite databases for exploratory analysis to parquet files, DuckDB and MotherDuck. The transformation in my workflow has been nothing short of astounding. 10GB of CSV files turned into 1GB of parquet files that are now stored in S3 buckets. Using DuckDB and MotherDuck, I can run exploratory queries seamlessly thanks to the DuckStack with dual execution with local processing and cloud scale. My query development time has decreased by 90%. And I'm loving the team feature of the MotherDuck platform. OCEANCODA is rocking the small data life! #duckdb #python #motherduck #eda #ai #ml (Graphic courtesy of Manning Publications Co. book 'DuckDB in Action.' ) Check it out.](https://www.linkedin.com/feed/update/urn:li:activity:7221573493295910912/)\n[![evidence profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1699896475864510464%2F_XFRsLSv_400x400.jpg&w=96&q=75)\\\\\n\\\\\nevidence\\\\\n\\\\\n@evidence\\_dev\\\\\n\\\\\nDuckDB is increasingly being built into every data tool, but DuckDB isn't designed to be used as a cloud data warehouse\\\\\n\\\\\n@motherduck is solving that problem, and they’re doing it in a delightful, uniquely DuckDB way](https://x.com/evidence_dev/status/1801630536252768584)\n[![Ethan profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1530999951609606144%2FPhNCpNOa_400x400.jpg&w=96&q=75)\\\\\n\\\\\nEthan\\\\\n\\\\\n@@ethanf\\_17\\\\\n\\\\\nDuckDB is my new best friend for analytics. It's so fast, makes it easy to manipulate dataframes, ingests anything, and exports it to whatever form I want. \\\\\n\\\\\nParquet, Arrow dataframes, and DuckDB are the future for analytics.](https://x.com/ethanf_17/status/1809835395695407529)\n[![uwe geercken profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1297147628%2FMyAvatar_x96.png&w=96&q=75)\\\\\n\\\\\nuwe geercken\\\\\n\\\\\n@uweeegeee\\\\\n\\\\\n#duckdb is really impressive: good terminal client, solid, easy and fast import of csv data and impressive speed on a 20mio data set. With automatic schema creation. Easy export to parquet and more. I think I am gonna spend more time on it...](https://twitter.com/uweeegeee/status/1611663518033498117)\n[![Etienne Posthumus profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1564546125352271882%2FxFZq7oWV.jpg&w=96&q=75)\\\\\n\\\\\nEtienne Posthumus\\\\\n\\\\\n@epoz\\\\\n\\\\\nI have been kicking the tyres of @motherduck - and it is 🤯\\\\\n\\\\\nBeing able to do hybrid queries over local and humongous remote datasets are incredible.\\\\\n\\\\\nThe potential applications are making my head spin with awe and excitement. Well done.](https://twitter.com/epoz/status/1688924943806013441)\n[![Jamin Ball profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1346111891618189312%2FSQzYMMst_x96.jpg&w=96&q=75)\\\\\n\\\\\nJamin Ball\\\\\n\\\\\n@jaminball\\\\\n\\\\\nAnother awesome & insightful post from the @motherduck team. The last few decades have been about scale-out. The next decade will be about scale-up! What you can accomplish with a single machine these days is incredibly impressive](https://twitter.com/jaminball/status/1659324081848864768)\n[![Danny Blumenthal profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2FDanny_Blumenthal_7bb40ab793.jpeg&w=96&q=75)\\\\\n\\\\\nDanny Blumenthal\\\\\n\\\\\ndpblumenthal\\\\\n\\\\\nOur friends at MotherDuck stand out in the data space for how consistently they keep shipping awesome new features.](https://www.linkedin.com/posts/dpblumenthal_instant-sql-is-here-activity-7321571222222217218-mAm5/?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![Nico Ritschel profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1671183451771527169%2Fg6RdaL5q_x96.jpg&w=96&q=75)\\\\\n\\\\\nNico Ritschel\\\\\n\\\\\n@nicoritschel\\\\\n\\\\\nI just deployed to Rill cloud backed by Motherduck and it worked great— wonderful experience...\\\\\nIn-browser CLI auth with Rill Cloud, added my Motherduck token, invited some viewers, I'm live. Took 3 minutes.](https://twitter.com/nicoritschel/status/1686595084454961152)\n[![Damon Cortesi profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1551732159416635392%2FIFOUWmsD_x96.jpg&w=96&q=75)\\\\\n\\\\\nDamon Cortesi\\\\\n\\\\\n@dacort\\\\\n\\\\\nBecause, I don't have enough time on my hands, I created a DuckDB extension that allows you to import data by scanning an Athena table. \\\\\n\\\\\nhttps://github.com/dacort/duckdb-athena-extension](https://twitter.com/dacort/status/1633952720561516544)\n[![George Fraser profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1571011203736174593%2FobtbMbnD_x96.jpg&w=96&q=75)\\\\\n\\\\\nGeorge Fraser\\\\\n\\\\\n@frasergeorgew\\\\\n\\\\\nHow fast is DuckDB compared to the best commercial data warehouses? I decided to benchmark it myself. Short version: very fast! But it's not (yet) great at scaling up to many cores. https://fivetran.com/blog/how-fast-is-duckdb-really](https://twitter.com/frasergeorgew/status/1638314840488923139)\n[![MotherDuck profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmedia.licdn.com%2Fdms%2Fimage%2Fv2%2FD560BAQEODuOUOAdoQg%2Fcompany-logo_100_100%2FB56ZfmzIGPG0AQ-%2F0%2F1751923851982%2Fmotherduck_logo%3Fe%3D1762992000%26v%3Dbeta%26t%3DelhKxwqBElgX_PNnhA3vQAu8QdPUILGxxa4doqv60-w&w=96&q=75)\\\\\n\\\\\nMotherDuck\\\\\n\\\\\n@motherduck\\\\\n\\\\\n@duckdb is empowering machine learning use cases! 🤖\\\\\nAny good model training starts with some good data exploration.\\\\\n\\\\\n@huggingface now enables SQL queries using DuckDB on any dataset stored on the Hub!](https://twitter.com/motherduck/status/1666804451552935938)\n[![DuckDB profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1274363897676521474%2FqgbqYYuV_x96.jpg&w=96&q=75)\\\\\n\\\\\nDuckDB\\\\\n\\\\\n@duckdb\\\\\n\\\\\nDuckDB Co-Creator @hfmuehleisen and MotherDuck Founder @jrdntgn in this new podcast - among other things about the origin story of DuckDB and later MotherDuck:](https://twitter.com/duckdb/status/1649305101570306048)\n[![Garrett McClintock profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1438016780060950531%2FCn11Ke8O_400x400.jpg&w=96&q=75)\\\\\n\\\\\nGarrett McClintock\\\\\n\\\\\n@GJMcClintock\\\\\n\\\\\njust built a pipeline using @dltHub and @motherduck and it's very nice. 10/10 experience once you get the hang of it and very scalable.](https://x.com/GJMcClintock/status/1800962608939303002)\n[![Andrew Madson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2F1706413992317_120c2864d9.jpeg&w=96&q=75)\\\\\n\\\\\nAndrew Madson\\\\\n\\\\\nandrew-madsen\\\\\n\\\\\nInstant SQL! This is one of the highlights of Data Council... Instant SQL caches a sample of your table instantly, and synchronously updates the query results, AS YOU TYPE!](https://www.linkedin.com/posts/andrew-madson_duckdb-instant-sql-this-is-one-of-the-activity-7321023818074894336-sbar?utm_source=share&utm_medium=member_desktop&rcm=ACoAAACw0KEBx7lMe9uvdRJxJyQifAb-I4X7yQA)\n[![KKovacs [ス] profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F995607718508589058%2FtQPO3yiD_400x400.jpg&w=96&q=75)\\\\\n\\\\\nKKovacs \\[ス\\]\\\\\n\\\\\n@kkovacs\\\\\n\\\\\nI don’t want to say that #DuckDB is a silver bullet because there is no such thing, but it’s surprisingly projectile-shaped, very shiny, and killed all the various werewolves (ok, data problems) I’ve thrown at it](https://twitter.com/kkovacs/status/1801607688889012587)\n[![evidence profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1699896475864510464%2F_XFRsLSv_400x400.jpg&w=96&q=75)\\\\\n\\\\\nevidence\\\\\n\\\\\n@evidence\\_dev\\\\\n\\\\\nDuckDB is increasingly being built into every data tool, but DuckDB isn't designed to be used as a cloud data warehouse\\\\\n\\\\\n@motherduck\\\\\nis solving that problem, and they’re doing it in a delightful, uniquely DuckDB way...](https://twitter.com/evidence_dev/status/1801630536252768584)\n[![Zach Wilson profile picture](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmedia.licdn.com%2Fdms%2Fimage%2Fv2%2FD5603AQGLd4zOUXaJJg%2Fprofile-displayphoto-shrink_200_200%2FB56ZcbuHVJHUAY-%2F0%2F1748516763636%3Fe%3D1762992000%26v%3Dbeta%26t%3DXmqD42PALO0Cur0sGLHL8Wo_3RMwSo9tGHycq0jpFI8&w=96&q=75)\\\\\n\\\\\nZach Wilson\\\\\n\\\\\neczachly\\\\\n\\\\\nMatt Martin and I did a runtime benchmark of Apache Spark vs DuckDB (by MotherDuck)\\\\\nWe found that data sets under 20 gigabytes ran about 100 times faster on DuckDB than they did on Apache Spark!\\\\\n\\\\\nThis benchmark uses plain parquet files and COUNT distinct to truly measure performance without skipping any data so we know the differences are correct.\\\\\n\\\\\nHere's the complete writeup: https://lnkd.in/gXuWGWyy](https://www.linkedin.com/posts/eczachly_matt-martin-and-i-did-a-runtime-benchmark-activity-7376304145978310657-GzkR/)\nFOLLOW US\n[MotherDuck Twitter](https://twitter.com/motherduck) [MotherDuck LinkedIn](https://linkedin.com/company/motherduck/)"
        },
        {
          "type": "section",
          "title": "Join the flock",
          "content": "[CHAT WITH US ON SLACK](https://slack.motherduck.com/)\n[![Mobile Slack banner](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fslack-banner-mobile.20467522.png&w=2048&q=75)![Desktop Slack banner](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fslack-banner-desktop.7f4b0dc6.png&w=2048&q=75)](https://slack.motherduck.com/)"
        },
        {
          "type": "section",
          "title": "SUBSCRIBE",
          "content": "### Subscribe to our newsletter\nE-mail\nSubscribe to other MotherDuck emails\nSubmit\n![Newsletter section illus](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fnewsletter-home.c93874dd.png&w=3840&q=75)\nAuthorization Response"
        }
      ],
      "images": [
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fduckdb-book-in-the-clouds.d9791904.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-scales.b290b9bc.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-reads.51fdba51.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-fast.bf89edac.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-why-motherduck-run-locally.3c9900e8.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-coding-duck.c6c8efa9.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-scientist-duck.5805adc0.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-plumber-duck.27784453.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-coding-duck.c6c8efa9.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fhomepage-scientist-duck.5805adc0.png&amp;w=3840&amp;q=75"
      ]
    },
    {
      "url": "https://motherduck.com/docs/about-motherduck/release-notes/",
      "slug": "docs-about-motherduck-release-notes",
      "title": "Release notes | MotherDuck Docs",
      "sections": [
        {
          "type": "section",
          "title": "October 9, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-9-2025 \"Direct link to October 9, 2025\")",
          "content": "Streaming Kafka Data into MotherDuck with Estuary [Live demo: October 9th](https://luma.com/7vfyym4m?utm_source=docseyebrow)\n[Skip to main content](https://motherduck.com/docs/about-motherduck/release-notes/#__docusaurus_skipToContent_fallback)\nCopy as Markdown\nOn this page\nWelcome to our release notes, we're excited to hear about your experience 😃\ninfo\n💁 If you have any issues please reach out directly to [Slack support channel](https://slack.motherduck.com/) or [support@motherduck.com](mailto:support@motherduck.com).\nMotherDuck now supports DuckDB versions 1.4.0 and 1.4.1, and DuckLake version 0.3 🎉\nDuckDB 1.4 delivers performance gains with improvements like a rewritten sorting engine, more efficient small writes, and new SQL syntax including the MERGE statement. Learn more in the DuckDB [1.4.0](https://github.com/duckdb/duckdb/releases/tag/v1.4.0) and [1.4.1](https://github.com/duckdb/duckdb/releases/tag/v1.4.1) changelogs.\n### Performance improvements\n- **[Sorting is 2x+ faster:](https://github.com/duckdb/duckdb/pull/17584)** Complete rewrite of sorting uses less memory and scales better across threads for ORDER BY, window functions, and list sorting\n- **[More efficient small writes:](https://github.com/duckdb/duckdb/pull/18829)** Appending small numbers of rows now writes far fewer bytes\n- **[5x faster checkpointing:](https://github.com/duckdb/duckdb/pull/18390)** Reuses table metadata when tables aren't altered during checkpoint\n- **[Parallel connection creation:](https://github.com/duckdb/duckdb/pull/18079)** Connections from instance cache can be created in parallel\n- **[Faster scalar functions on dictionary data:](https://github.com/duckdb/duckdb/pull/18127)** Functions on dictionary-compressed data only run once per unique value\n### SQL syntax updates\n- **[`MERGE INTO` statement:](https://github.com/duckdb/duckdb/pull/18135)** Standard SQL upserts without requiring primary keys or indexes\n- **[`FILL()` window function:](https://duckdb.org/2025/09/16/announcing-duckdb-140.html#fill-window-function)** Interpolate missing values in ordered data\n- **[Python-style macro arguments:](https://github.com/duckdb/duckdb/pull/18684)** Macros accept positional or named arguments for any parameter\n- **[`STRUCT` to `MAP` cast:](https://github.com/duckdb/duckdb/pull/17799)** Direct casting between struct and map types\n### Parquet improvements\n- **[`VARIANT` type reading:](https://github.com/duckdb/duckdb/pull/18187)** Read Parquet `VARIANT` types for faster semi-structured data processing\n- **[Native geometry type writes:](https://github.com/duckdb/duckdb/pull/18832)** Write native Parquet geometry types\n- **[Auto-globbing for directories:](https://github.com/duckdb/duckdb/pull/18760)** Automatically treats paths as directories and retries with glob patterns when no file is found\nLearn more in the official DuckDB Labs announcements for [1.4.0](https://duckdb.org/2025/09/16/announcing-duckdb-140.html) and [1.4.1](https://duckdb.org/2025/10/07/announcing-duckdb-141.html).\nWhile you can continue using your current version of DuckDB with MotherDuck, we encourage you to [upgrade your DuckDB clients to 1.4.1](https://duckdb.org/install) as soon as you can to take advantage of the fixes and performance improvements.\n### \\[Preview\\] DuckLake 0.3\nAs we announced earlier this year, MotherDuck now supports [DuckLake](https://ducklake.select/), an integrated data lake and catalog format. DuckLake 0.3 makes working with DuckLake more robust, including [`CHECKPOINT` for easy maintenance](https://github.com/duckdb/ducklake/pull/406), new paths for Iceberg interoperability, [spatial geometry types](https://github.com/duckdb/ducklake/pull/412), and [`MERGE INTO` support](https://github.com/duckdb/ducklake/pull/351).\nLearn more about using DuckLake databases in MotherDuck in the [documentation](https://motherduck.com/docs/integrations/file-formats/ducklake/), and the recent improvements in the [DuckDB Labs announcement for DuckLake 0.3](https://ducklake.select/2025/09/17/ducklake-03/)."
        },
        {
          "type": "section",
          "title": "September 30, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#september-30-2025 \"Direct link to September 30, 2025\")",
          "content": "- **Get help from MotherDuck Experts:** Get a human helping hand with technical questions, troubleshooting, and best practices directly in the MotherDuck UI. Open \"Expert help\" from the Help menu to talk with our team, and you'll be notified of responses. Expert help is available with Business and Lite plans.\n- **Transient option for database storage retention:** Databases can now be created with transient retention, which provides a minimal retention period and no failsafe storage. This option can be useful for intermediate datasets or data easily reconstructed from external sources. Create transient databases in the UI or via [`CREATE DATABASE db_name (TRANSIENT)`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-database/#syntax). Transient databases are available with Business and Lite plans. Learn more in the [storage management documentation](https://motherduck.com/docs/concepts/Storage-lifecycle/#storage-management).\n- **Duplicate notebooks:** Copy existing SQL notebooks to reuse query templates or create variations of your analysis. Find the duplicate option in any notebook's options menu in the left sidebar.\n- **Monitor database storage in the MotherDuck UI:** Organization admins can now review database storage metrics in the updated [Databases](https://app.motherduck.com/settings/databases) page, showing current and cumulative database storage footprint over time. Learn more in the [storage lifecycle documentation](https://motherduck.com/docs/concepts/Storage-lifecycle/#breaking-down-storage-usage).\n![](https://motherduck.com/docs/assets/ideal-img/storage_monitor_ui.3fdfda2.540.png)"
        },
        {
          "type": "section",
          "title": "September 10, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#september-10-2025 \"Direct link to September 10, 2025\")",
          "content": "- **Instances are now called Ducklings:** We've updated our name for instances to better reflect their purpose as dedicated and scalable DuckDB instances that provide isolated, on-demand compute for each user's analytics workload in MotherDuck. Find the familiar instance controls now in [Settings > Ducklings](https://app.motherduck.com/settings/ducklings). This release does not affect the [Admin REST API methods for instances](https://motherduck.com/docs/sql-reference/rest-api/motherduck-rest-api/). Learn more about how [Ducklings](https://motherduck.com/docs/about-motherduck/billing/instances/) are different from standard data warehouse instances in [this blog post](https://motherduck.com/blog/scaling-duckdb-with-ducklings/).\n- **Rename Notebooks from the Object Explorer:** SQL notebooks can now be renamed directly from the left sidebar using a notebook's options menu.\n- **Enum support in `prompt` function:** The `PROMPT` SQL function now supports enum types for consistent classification outputs. See the [function documentation](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/ai-functions/prompt/#classification-with-enums) for details and examples.\n- **Command menu in the MotherDuck UI:** Navigate the MotherDuck UI from your keyboard using the new command menu. Quickly access common actions like adding notebook cells, creating notebooks, and navigating between pages. Try it out with \"Open command menu\" in the top-left Organization dropdown, or use `Cmd/Ctrl + Shift + P`\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "September 4, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#september-4-2025 \"Direct link to September 4, 2025\")",
          "content": "- **Pre-filled names for service accounts and tokens:** When creating service accounts and tokens in the [Settings > Service Accounts](https://motherduck.com/docs/key-tasks/service-accounts-guide/) page, names are now pre-filled with the following format to help differentiate between them:\n  - _Service Accounts:_ `{creator_username}_service_account_{number}`\n  - _Read-Write Tokens:_ `{sa_username}_read_write_token_{number}`\n  - _Read-Scaling Tokens:_ `{sa_username}_read_scaling_token_{number}`\n- **DuckLake database icon in the MotherDuck UI:** [DuckLake-backed databases](https://motherduck.com/docs/concepts/ducklake/) now display a distinct icon to easily distinguish them from databases using MotherDuck native storage."
        },
        {
          "type": "section",
          "title": "August 21, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-21-2025 \"Direct link to August 21, 2025\")",
          "content": "- **Support for H3 Spatial Indexing Extension:** MotherDuck now supports the [H3 DuckDB Extension](https://duckdb.org/community_extensions/extensions/h3.html), which adds support for the [H3 hierarchical hexagonal grid system](https://h3geo.org/) for geospatial analysis. This extension is pre-installed in MotherDuck, and users are not required to install this extension."
        },
        {
          "type": "section",
          "title": "August 13, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-13-2025 \"Direct link to August 13, 2025\")",
          "content": "- **GPT 5 Support in `prompt` function**: The `PROMPT` function now supports OpenAI's GPT 5 series models. Refer to the [function documentation](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/ai-functions/prompt/) for more details."
        },
        {
          "type": "section",
          "title": "August 12, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-12-2025 \"Direct link to August 12, 2025\")",
          "content": "- **Display Preformatted VARCHAR values:** VARCHAR results in the MotherDuck UI data value pane now support display of preformatted text.\n- **Format SQL in MotherDuck Notebook:** Format any SQL statement using the new **Format** button in the notebook cell options menu, or with `Option/Alt + Cmd/Ctrl + O`. When text is selected, only the selection is formatted.\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "August 8, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-8-2025 \"Direct link to August 8, 2025\")",
          "content": "- **Test S3 Credentials:** MotherDuck users can now test S3 credentials directly in the MotherDuck UI on the Secrets page in Settings when adding new S3 secrets.\n- **Support for DuckDB Configuration Options:** With this release, MotherDuck now correctly respects [DuckDB configuration options](https://duckdb.org/docs/stable/configuration/overview.html) and their local defaults, including extension settings like TimeZone. Broader coverage of additional configuration options is planned for the upcoming [DuckDB 1.4 release](https://duckdb.org/release_calendar.html)."
        },
        {
          "type": "section",
          "title": "July 31, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-31-2025 \"Direct link to July 31, 2025\")",
          "content": "- **Updated FixIt Keyboard Shortcut:** The `Escape` key can now be used to reject [FixIt](https://motherduck.com/docs/key-tasks/ai-and-motherduck/ai-features-in-ui/#automatically-fix-sql-errors-in-the-motherduck-ui) suggestions, providing a quicker way to dismiss generated SQL fixes.\n- **Generate Notebook Names:** Get descriptive, context-aware names for notebooks in the MotherDuck UI based on their SQL content. Click the new \"Generate name from SQL\" button to the left of a notebook's name to try it out. Available for users in MotherDuck's Business and Lite plans.\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "July 25, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-25-2025 \"Direct link to July 25, 2025\")",
          "content": "- **Data Grid UX Improvements:** Data grids now include row numbers to make it easier to explore query results and reference specific rows. Users can now select multiple rows by clicking row numbers with the shift-key modifier.\nYour browser does not support the video tag.\n- **New UX for FixIt:** [FixIt](https://motherduck.com/docs/key-tasks/ai-and-motherduck/ai-features-in-ui/#automatically-fix-sql-errors-in-the-motherduck-ui) now includes keybindings for the toggles to accept and reject suggestions and turn automatic suggestions on and off.\n  - **`Cmd/Ctrl + Enter`:** Accept suggestion and run query\n  - **`Cmd/Ctrl + Shift + Backspace`:** Reject suggestion\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "July 16, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-16-2025 \"Direct link to July 16, 2025\")",
          "content": "- **NEW - Larger Compute Instances:** MotherDuck now offers two new memory-rich compute duckling (instance) types, **Mega** and **Giga**, built to run at high-capacity for the largest, most demanding jobs. Learn more in the [launch blog](https://motherduck.com/blog/announcing-mega-giga-instance-sizes-huge-scale) and [Docs](https://motherduck.com/docs/about-motherduck/billing/instances/)."
        },
        {
          "type": "section",
          "title": "July 14, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-14-2025 \"Direct link to July 14, 2025\")",
          "content": "- **DuckDB 1.3.2:** MotherDuck supports DuckDB 1.3.2, a bugfix release. Additional details are available in the changelog [here](https://github.com/duckdb/duckdb/releases/tag/v1.3.2).\n- **The Settings Button has Moved to the Org Dropdown:** Settings has moved from the left sidebar into the Organization dropdown at the top left for easier access and a cleaner layout.\n- **Admin Experience Enhancements:** With this week’s release, MotherDuck organization admins now have the flexibility to do more to manage their Org directly from the MotherDuck UI due to better visibility and admin-specific functionality for managing tokens, service accounts, and storage.\n  - **New Service Accounts Page in Settings:** Organization admins can now view, create, and manage service accounts and service account tokens in the [Service Accounts](https://motherduck.com/docs/key-tasks/service-accounts-guide/) section of MotherDuck settings.\n  - **Impersonation of Service Accounts:** Organization admins can now temporarily [impersonate a service account](https://motherduck.com/docs/key-tasks/service-accounts-guide/#impersonate-service-accounts-ui-only) while using the MotherDuck UI.\n  - **Storage Usage History added to `MD_INFORMATION_SCHEMA`:** Organization admins can now access up to 30 days of historical storage data using the [`STORAGE_INFO_HISTORY` view](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/md_information_schema/storage_info/) in the [`MD_INFORMATION_SCHEMA`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/md_information_schema/introduction/). Each record includes a `result_ts` timestamp showing when the storage metrics were calculated."
        },
        {
          "type": "section",
          "title": "July 01, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-01-2025 \"Direct link to July 01, 2025\")",
          "content": "**\\[Preview\\] DuckLake Support**: MotherDuck now supports [DuckLake](https://ducklake.select/), an integrated data lake and catalog format.\n- MotherDuck currently provides two options for creating and integrating with DuckLake databases:\n  - **Fully managed**: MotherDuck manages both data storage and metadata\n  - **Bring your own bucket**: Connect your S3-compatible object storage with options for:\n    - MotherDuck compute + MotherDuck catalog\n    - Bring-your-own-compute (BYOC) + MotherDuck catalog\nLearn more in the [documentation](https://motherduck.com/docs/integrations/file-formats/ducklake/) and [announcement blog](https://motherduck.com/blog/announcing-ducklake-support-motherduck-preview/)."
        },
        {
          "type": "section",
          "title": "June 26, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-26-2025 \"Direct link to June 26, 2025\")",
          "content": "- **Chat Widget Optimization:** Users can now view their inline edit history in a more compact chat widget and quickly request follow-up changes when needed.\n- ![](https://motherduck.com/docs/assets/ideal-img/chat-widget-optimization.9b1b209.540.png)\n- **Improved Boolean cell styling:** Boolean values in the data grid now have distinct visual weights to make it easier to visually scan result sets and prevent confusion with empty cells.\n![](https://motherduck.com/docs/assets/ideal-img/boolean-cell-styling.430efa6.540.png)"
        },
        {
          "type": "section",
          "title": "June 18, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-18-2025 \"Direct link to June 18, 2025\")",
          "content": "- **DuckDB 1.3.1:** MotherDuck supports DuckDB 1.3.1, a bugfix release. Additional details are available in the changelog [here](https://github.com/duckdb/duckdb/releases/tag/v1.3.1).\n- **`PIVOT` statements in MotherDuck UI:** The MotherDuck UI now supports [`PIVOT` statements](https://duckdb.org/docs/stable/sql/statements/pivot.html), with pivot columns also appearing in the Column Explorer. `PIVOT` transforms distinct column values into separate columns with aggregated data.\n- **New `STORAGE_INFO` View in `MD_INFORMATION_SCHEMA`:** Organization admins can now review detailed storage breakdowns per database using the new [`STORAGE_INFO` view](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/md_information_schema/storage_info/) in the [`MD_INFORMATION_SCHEMA`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/md_information_schema/introduction/)."
        },
        {
          "type": "section",
          "title": "June 12, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-12-2025 \"Direct link to June 12, 2025\")",
          "content": "- **Improved query execution UX:** After 5 seconds, the run button now displays a timer showing how long the query has been running. It also offers clearer visual cues for canceling a query on mouseover and focus.\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "June 5, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-5-2025 \"Direct link to June 5, 2025\")",
          "content": "- **Overwrite a database with a zero-copy clone:** The new [`COPY FROM DATABASE (OVERWRITE)` command](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/copy-database-overwrite/) replaces all data in the target database with the source’s contents in a single atomic operation, waiting for active writes to finish and blocking new ones during the process.\n- **Copy SQL definitions for views from the Object Explorer:** The dropdown menu for views in the left-hand panel of the MotherDuck UI now lets you copy the associated SQL definition without opening the table summary.\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "May 29, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-29-2025 \"Direct link to May 29, 2025\")",
          "content": "MotherDuck now supports DuckDB version 1.3.0 🎉\nDuckDB 1.3.0 improves performance in real-world scenarios for faster queries, new SQL syntax, and smarter Parquet file handling. Learn more in the [changelog](https://github.com/duckdb/duckdb/releases/tag/v1.3.0) here.\n### Parquet improvements\n- **[New `TRY()` expression for safer queries:](https://duckdb.org/2025/05/21/announcing-duckdb-130.html#try-expression)** More graceful handling for bad data by returning `NULL` instead of an error on problematic rows\n- **[Pushdown of arbitrary expressions into scans:](https://github.com/duckdb/duckdb/pull/16430)** Reductions in unnecessary data processing to deliver up to 30x faster queries\n- **[Pushdown of inequality conditions into joins:](https://github.com/duckdb/duckdb/pull/16508)** Major speedups for incremental dbt models and join-heavy queries\n### SQL syntax updates\n- **[Python-style lambda syntax:](https://github.com/duckdb/duckdb/pull/17235)** You can now use `lambda x: x + 1` instead of `x -> x + 1`; the old syntax is deprecated, but still supported.\n- **[`cast_to_type()` function:](https://github.com/duckdb/duckdb/pull/17209)** Dynamically cast values to match column types - useful in generic expressions and `CASE` statements when writing macros.\n- **[Recursive JSON access:](https://github.com/duckdb/duckdb/pull/17406)** New `json_each()` and `json_tree()` functions make it easier to traverse nested JSON structures.\n- **[Struct field updates:](https://github.com/duckdb/duckdb/pull/17003)** Individual fields in structs can now be modified using `ALTER`; all fields are rewritten even if only one is updated.\n- **[Prepared statements metadata:](https://github.com/duckdb/duckdb/pull/16541)** The `duckdb_prepared_statements()` function returns all prepared statements in the session.\n- **[More flexible type definitions:](https://github.com/duckdb/duckdb/pull/17404)** Support has been added for `CREATE OR REPLACE TYPE`, `CREATE TYPE IF NOT EXISTS`, and `CREATE TEMPORARY TYPE`.\n- **[Preserved order for `OR` filters:](https://github.com/duckdb/duckdb/pull/17180)** Execution now preserves the order of clauses in `WHERE` conditions using `OR`.\n- **[Function alias visibility:](https://github.com/duckdb/duckdb/pull/16600)** `duckdb_functions()` now returns aliases in addition to the function outputs.\n### Parquet improvements\n- **[Late materialization:](https://github.com/duckdb/duckdb/pull/17036)** Queries are 3–10x faster with `LIMIT` due to deferred column loading\n- **[~15% average speedup on reads:](https://github.com/duckdb/duckdb/pull/16595)** New scan and filter efficiency improvements\n- **[30%+ faster write throughput:](https://github.com/duckdb/duckdb/pull/17061)** Improved multithreaded export performance\n- **[Better compression for large strings:](https://github.com/duckdb/duckdb/pull/17164)** Large string values are now dictionary-compressed\n- **[Smarter rowgroup combining:](https://github.com/duckdb/duckdb/pull/17118)** Files are more efficient due to merging small rowgroups at write time\nLearn more in the official [DuckDB Labs 1.3.0 announcement](https://duckdb.org/2025/05/21/announcing-duckdb-130.html).\nWhile you can continue using your current version of DuckDB, we encourage you to [upgrade your DuckDB clients to 1.3.0](https://duckdb.org/docs/installation/?version=stable&environment=cli&platform=macos&download_method=package_manager) as soon as you can to take advantage of the fixes and performance improvements.\n### Additional updates from this release are outlined below -\n- Query results now display in a redesigned table that delivers enhanced performance when viewing and exploring data - column headers now include type information for better context. Additional table functionality, including sorting and filtering of results, is coming in future releases."
        },
        {
          "type": "section",
          "title": "May 22, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-22-2025 \"Direct link to May 22, 2025\")",
          "content": "- **Faster queries on complex filters and wide tables:** We've significantly boosted performance for queries with IN filters, selective joins, and LIMIT clauses. Expect noticeable speedups on wide tables or those with large string or JSON columns.\n- **New keybindings for power users:**\n  - Toggle Instant SQL for the current SQL cell: `cmd/ctrl+shift+.`\n  - Toggle Object Explorer: `cmd/ctrl+b`\n  - Toggle Inspector (Column Explorer): `cmd/ctrl+i`\n  - Toggle worksheet mode for the current SQL cell: `cmd/ctrl+e`\n- **Org-wide Active Accounts:** Organization admins can now view all active accounts and their associated ducklings in the [Active Accounts](https://app.motherduck.com/settings/active-accounts) section of MotherDuck settings.\n- **Smarter Instant SQL caching:** Instant SQL now accounts for filters in your WHERE clause when building its cache, offering a greater number of relevant rows as you work.\n- **Full row count in flat table results:** SQL cells now display a full result row count when viewing results in \"flat\" table mode.\n- **GPT 4.1 Support in `prompt` function**: The `PROMPT` function now supports OpenAI's GPT 4.1 series models. Refer to the [function documentation](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/ai-functions/prompt/) for more details."
        },
        {
          "type": "section",
          "title": "May 16, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-16-2025 \"Direct link to May 16, 2025\")",
          "content": "- **Multiple SQL statements now supported in Instant SQL:** Execute individual statements within multi-statement SQL cells by clicking on the desired statement while [Instant SQL](https://motherduck.com/blog/introducing-instant-sql/) is enabled.\n- **Copy Table Names directly from Object Explorer:** Use the options menu on any table in the Object Explorer to copy its name to your clipboard. Paste exact table references into any SQL editor—eliminating typos and saving time when writing queries."
        },
        {
          "type": "section",
          "title": "May 1, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-1-2025 \"Direct link to May 1, 2025\")",
          "content": "- **Window Functions in Instant SQL:** MotherDuck now offers improved window function support in [Instant SQL](https://motherduck.com/blog/introducing-instant-sql/)\n- **Copy-Paste in the Object Explorer:** Detailed comments and error messages are now able to be copied and pasted in one-click within Object Explorer tooltips"
        },
        {
          "type": "section",
          "title": "April 23, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-23-2025 \"Direct link to April 23, 2025\")",
          "content": "- **\\[Preview\\] AI-powered SQL editing:** MotherDuck users can now access inline AI-powered SQL suggestions within the MotherDuck UI. To try it out, select SQL text in your notebook, hit cmd+k (or ctrl+k for Windows and Linux users), write an instruction in plain language, and get an AI suggestion.\n- **\\[Preview\\] Introducing Instant SQL:** A new way to write SQL that updates your result set as you type to expedite query building and debugging – all with zero-latency, no run button required. Read more about Instant SQL in the [MotherDuck Blog](https://motherduck.com/blog/introducing-instant-sql/).\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "April 22, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-22-2025 \"Direct link to April 22, 2025\")",
          "content": "- **Increasing read scaling replica maximum:** MotherDuck Business Plan users can now set a Read Scaling replica pool size of up to 16 database replicas that can be read concurrently. When connecting with a read scaling token, each concurrent end user connects to a read scaling replica of the database that is served by its own duckling. Refer to the [documentation](https://motherduck.com/docs/key-tasks/authenticating-and-connecting-to-motherduck/read-scaling/) for more details.\n- **Fresh new look for SQL notebook cells:** The run button, database selection, and other cell options have moved, making more space to focus on your SQL.\n![Export query results](https://motherduck.com/docs/assets/images/release-notes-250422-new_cell_layout-fa1eba376e34a0c6e6cd5f9bfa0447e5.png)"
        },
        {
          "type": "section",
          "title": "April 17, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-17-2025 \"Direct link to April 17, 2025\")",
          "content": "- **Now in Preview:** Organization admins on MotherDuck's Business plan can now use the [`QUERY_HISTORY` view](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/md_information_schema/query_history/) to get a consolidated view of all queries run across their full organization.\n- **Org-wide Databases and Shares:** Organization admins can now view their Organization's [Databases](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-database/) and [Shares](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-share/) in the updated Settings section of the MotherDuck web UI.\n- **Txt Files can now be uploaded:** MotherDuck users can now upload txt files to their MotherDuck organization."
        },
        {
          "type": "section",
          "title": "April 10, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-10-2025 \"Direct link to April 10, 2025\")",
          "content": "- MotherDuck supports DuckDB 1.2.2, a bugfix release. More details in the changelog [here](https://github.com/duckdb/duckdb/releases/tag/v1.2.2).\n- We've updated MotherDuck's timezone handling to use `UTC` as the default, replacing the prior `America/New_York` default. When converting values to the \" [Timestamp with Time Zone](https://duckdb.org/docs/stable/sql/data_types/timestamp.html#time-zones)\" type, UTC will now be applied by default. A custom timezone for the active connection can be set temporarily using the `SET TimeZone = '<desired_timezone>';` command ( [see available timezone values](https://duckdb.org/docs/stable/sql/data_types/timezones.html)). Your DuckDB client's local timezone will still be used for other time-related query operations. For more details on DuckDB's timezone handling, see the [DuckDB Time Zone documentation](https://duckdb.org/docs/stable/sql/data_types/timestamp.html#time-zone-support).\n- MotherDuck users can now specify an alias when [attaching a SHARE](https://motherduck.com/docs/key-tasks/sharing-data/sharing-overview/). Refer to the \\[documentation\\]( [ATTACH](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/attach/) for more information and reach out to us in our [Community Slack](https://slack.motherduck.com/) if you have any questions or feedback."
        },
        {
          "type": "section",
          "title": "April 3, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-3-2025 \"Direct link to April 3, 2025\")",
          "content": "- **Access Control for Shares**: MotherDuck users can now create shares with a [RESTRICTED](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-share/#access-clause) access setting, allowing share owners to precisely control access by granting or revoking permissions for individual MotherDuck users or a list of specified users through [GRANT](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/grant-access/) and [REVOKE](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/revoke-access/) commands. When first created, a [RESTRICTED](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-share/#access-clause) share is only accessible by the share owner.\n- **Manual Data Refresh for Read-Scaling Replicas**: MotherDuck users can now update data more frequently on [read-scaling replicas](https://motherduck.com/docs/key-tasks/authenticating-and-connecting-to-motherduck/read-scaling/) by using the [CREATE SNAPSHOT OF](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-snapshot/) function to manually trigger snapshot creation, followed by [REFRESH DATABASE](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/refresh-database/) on the read-scaling replica. This provides access to the freshest data without waiting for automatic updates. Note that manual snapshot creation will hold any new write queries on the read-write database from starting in order to able take the snapshot."
        },
        {
          "type": "section",
          "title": "March 20, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#march-20-2025 \"Direct link to March 20, 2025\")",
          "content": "- Users can now search & filter for notebooks, databases, and shares in the left sidebar with our object search in the top left navigation.\n- Introducing performance improvements to the databases section of the sidebar: The attached databases section now scales efficiently to handle very large numbers of databases, schemas, and tables.\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "March 6, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#march-6-2025 \"Direct link to March 6, 2025\")",
          "content": "- MotherDuck now supports Indexes for query acceleration, in addition to their use in constraints. Learn more about DuckDB Indexes [here](https://duckdb.org/docs/stable/guides/performance/indexing.html#art-index-scans).\n- MotherDuck supports DuckDB 1.2.1, a bugfix release. More details in the changelog [here](https://github.com/duckdb/duckdb/releases/tag/v1.2.1).\n- Support for DuckDB versions 0.10.2, 0.10.3, and 1.0.0 has ended.\n- Introducing a smoother local file experience: Persist files across sessions, view metadata directly in the Object Explorer, and convert files to tables.\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "February 19, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#february-19-2025 \"Direct link to February 19, 2025\")",
          "content": "- Added [EXPLAIN ANALYZE](https://duckdb.org/docs/guides/meta/explain_analyze) support for profiling hybrid queries.\n- Added a \"Running Queries\" page in settings to monitor active long-running queries."
        },
        {
          "type": "section",
          "title": "February 11, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#february-11-2025 \"Direct link to February 11, 2025\")",
          "content": "With today's release, we're introducing a number of features to support businesses building production-grade analytics. See [blogpost](https://motherduck.com/blog/introducing-motherduck-for-business-analytics/) for more details.\n**New Plan Options:**\nMotherDuck now has two platform plans to choose from, **Lite** and **Business**, alongside our **Free** Plan.\n- The **Free Plan** is designed for hobbyists and experimenters with small-scale analytics needs, like hobby projects.\n- The **Lite Plan** is most useful for small team use cases and individuals. Maybe your small team is building out some early analytics, or your hobby project is growing into something more.\n- The **Business Plan** is ideal for businesses with complex needs, and larger teams. New Instance type options:\n**[New Instances](https://motherduck.com/docs/about-motherduck/billing/instances/) and compute pricing options:**\n_**Pay Per Instance**_: We're adding new choices for MotherDuck compute, with Pay Per Instance **Standard** and **Jumbo** instances.\n- The _Pay Per Instance_ model is based on uptime, which provides more predictable costs you can compare to other data warehouse products.\n- The **Standard** instance is great for everyday tasks, and balanced performance.\n- The **Jumbo** instance is often useful for heavy workflows, like batch ETL pipelines or complex transformations.\n- When you run a query, your instance spins up within milliseconds.\n- You pay for the seconds that the instance is running, with a minimum of one minute.\n_**Pay Per Query**_: Our existing instances are now called **Pulse**.\n- These instances are capped in size, however they are billed on our existing _Pay Per Query_ model, metered for billing on Compute Unit seconds.\n- The **Pulse** instance enables lightweight, fully serverless analytics.\n- This can be very useful for applications where you have data partitioned by user, ad-hoc query execution, or incremental data processing with smaller data sizes.\n**Read Scaling Controls:**\n- Users with access to [Read Scaling](https://motherduck.com/docs/key-tasks/authenticating-and-connecting-to-motherduck/read-scaling) in their organization can now set the Read Scaling replica pool size, letting you control the maximum concurrency threshold for your read replicas.\n- Users can set their Read Scaling [Instance type](https://motherduck.com/docs/about-motherduck/billing/instances/) indepdently of the Read/Write Instance type."
        },
        {
          "type": "section",
          "title": "February 6, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#february-6-2025 \"Direct link to February 6, 2025\")",
          "content": "MotherDuck supports DuckDB's newly released version 1.2.0 🎉\nDuckDB 1.2.0 is packed with improvements that make using MotherDuck even easier, like a better CSV reader, friendlier SQL, and improved performance!\nRead more about DuckDB 1.2.0 in the [MotherDuck Blog](https://motherduck.com/blog/announcing-duckdb-12-on-motherduck-cdw), and review the official [DuckDB Labs 1.2.0 announcement](https://duckdb.org/2025/02/05/announcing-duckdb-120.html) for notes on breaking changes and detailed updates."
        },
        {
          "type": "section",
          "title": "January 8, 2025 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#january-8-2025 \"Direct link to January 8, 2025\")",
          "content": "- MotherDuck clients now verify the server's TLS certificate.\n- MotherDuck now automatically opens the browser to facilitate authentication in Windows environments."
        },
        {
          "type": "section",
          "title": "December 12, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#december-12-2024 \"Direct link to December 12, 2024\")",
          "content": "- \\[Preview\\] Introducing MotherDuck's REST API: Organizations with large numbers of users have struggled to manage them through the MotherDuck UI. We've received requests for a programmatic interface, and we've listened! We are launching a User Management REST API to provide support for managing Users and Access Tokens. Through the REST API, MotherDuck users can now easily create separate users for BI or data ingestion/processing workloads, and enable new experiences for app developers (ie. issuing temporary short-lived read-scaling tokens). See [the documentation](https://motherduck.com/docs/sql-reference/rest-api/motherduck-rest-api/) for more information and reach out to us in our community Slack channel if you have any questions or feedback!"
        },
        {
          "type": "section",
          "title": "December 4, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#december-4-2024 \"Direct link to December 4, 2024\")",
          "content": "- \\[Preview\\] Introducing support for read scaling: With the launch of read scaling tokens, MotherDuck accounts now support scaling up to 4 replicas of your database that can be read concurrently. When connecting with a read scaling token, each concurrent end user connects to a read scaling replica of the database that is served by its own duckling. See [our documentation](https://motherduck.com/docs/key-tasks/authenticating-and-connecting-to-motherduck/read-scaling/) for more information.\n- Auto-sync of new and deleted attachments: users who connect to MotherDuck through two different clients concurrently (example: the DuckDB CLI and the MotherDuck UI), will now see changes made by one client in another. For example, if you create a new database in the CLI, the MotherDuck UI will automatically be updated to reflect it and vice versa. Similarly, a new attachment, detaching, or database deletion will be synced.\n- Create databases directly from object explorer. Users can now create a new attached database from the Object explorer panel on the left side of the MotherDuck web UI. Previously you could only do so by issuing an SQL command."
        },
        {
          "type": "section",
          "title": "November 21, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#november-21-2024 \"Direct link to November 21, 2024\")",
          "content": "- Introducing the **Table Summary**. Customers have told us that they love the Column Explorer, but they wish there was an easy way to see it for tables in their database lists without having to write SQL. So we decided to build the table summary. You can activate it by clicking on a table or view in the Object Explorer, which will reveal a panel that shows the Column Explorer (the column names, types, distributions, and null percentages for the selected table or view). You can get a quick preview of the table preview and see the DDL statement that defines it. We're excited to see how you use it!\n- **A resizable, responsive Column Explorer**. To make the table summary work well, we made the Column Explorer both resizable and responsive. This also means the inspector – the right side panel that expands and shows the Column Explorer for your result sets – can be resized. As the panel gets smaller, we responsively hide the null percentage and the distribution plots, giving more room for the column name.\n- Introducing the **[MD\\_INFORMATION\\_SCHEMA](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/md_information_schema/introduction/)**. The MotherDuck MD\\_INFORMATION\\_SCHEMA views are read-only, system-defined views that provide metadata information about your MotherDuck objects. The current views that you can query to retrieve metadata information are: databases, owned\\_shares, and shared\\_with\\_me."
        },
        {
          "type": "section",
          "title": "November 7, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#november-7-2024 \"Direct link to November 7, 2024\")",
          "content": "- MotherDuck now supports DuckDB 1.1.3 clients, a bugfix release. More info on the changelog [here](https://github.com/duckdb/duckdb/releases/tag/v1.1.3).\n- DuckDB recently [introduced a change](https://github.com/duckdb/duckdb/pull/13372) that would allow for much more efficient concurrent bulk ingestion. We completed the necessary infrastructure changes, plus collaborated on [some bug fixes](https://github.com/duckdb/duckdb/pull/14467) and that optimization is now enabled on our backends."
        },
        {
          "type": "section",
          "title": "October 31, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-31-2024 \"Direct link to October 31, 2024\")",
          "content": "- Motherduck introduces `Admin` and `member` roles for organizations. `Admin` users can change the roles of other users in the organization or [Remove](https://motherduck.com/docs/key-tasks/managing-organizations/#removing-users) a user from the organization.\n- MotherDuck & Hydra announced the first release of [pg\\_duckdb](https://github.com/duckdb/pg_duckdb), a PostgreSQL extension that allows you to run DuckDB (and connect to MotherDuck!) within PostgreSQL. Read more about it [here](https://motherduck.com/blog/pgduckdb-beta-release-duckdb-postgres/)"
        },
        {
          "type": "section",
          "title": "October 17, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-17-2024 \"Direct link to October 17, 2024\")",
          "content": "- MotherDuck now supports DuckDB 1.1.2 clients, a bugfix release. More info on the changelog [here](https://github.com/duckdb/duckdb/releases/tag/v1.1.2)."
        },
        {
          "type": "section",
          "title": "October 14, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-14-2024 \"Direct link to October 14, 2024\")",
          "content": "- Shares now support [auto-updating](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-share/). Automatically updated shares no longer require running explicit UPDATE SHARE commands. Instead changes on the underlying database are automatically published to the share within at most 5 minutes, after writes have completed. However, the option for manually updating shares remains available and continues to be the default setting. This allows users who prefer finer control over their update lifecycle to maintain their usual workflow. The auto-updating property is defined at share creation time, and share owners can force an explicit update any time on both types of shares by running [`UPDATE SHARE`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/update-share/)."
        },
        {
          "type": "section",
          "title": "October 9, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-9-2024 \"Direct link to October 9, 2024\")",
          "content": "We are excited to introduce a new SQL [prompt](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/ai-functions/prompt/) function, currently in preview, that enables text generation directly within SQL queries. This feature leverages LLMs to process and generate text based on provided prompts.\nFeatures:\n- Generate SQL: Use the prompt function in your SQL queries to request text generation, for example, `SELECT prompt('Write a poem about ducks');`.\n- Model Selection: Specify the LLM model type with the model parameter. Available models include `gpt-4o-mini` (default) and `gpt-4o-2024-08-06`.\n- Structured Outputs: Opt for structured responses using the struct or json\\_schema parameters to tailor the output format to your needs.\nCheckout more snippets [here](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/ai-functions/prompt/#text-generation)."
        },
        {
          "type": "section",
          "title": "October 2, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-2-2024 \"Direct link to October 2, 2024\")",
          "content": "- MotherDuck now supports [monitoring](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/connection-management/monitor-connections/) and [interrupting](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/connection-management/interrupt-connections/) server-side queries.\n- Various stability and usability improvements."
        },
        {
          "type": "section",
          "title": "September 25, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#september-25-2024 \"Direct link to September 25, 2024\")",
          "content": "- MotherDuck now supports DuckDB 1.1.1, a bugfix release. More info on the changelog [here](https://github.com/duckdb/duckdb/releases/tag/v1.1.1).\n- In the MotherDuck Web UI, users can easily view and copy the contents of a cell from their query results.\nYour browser does not support the video tag."
        },
        {
          "type": "section",
          "title": "September 16, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#september-16-2024 \"Direct link to September 16, 2024\")",
          "content": "MotherDuck now supports DuckDB version 1.1.0. 🎉\nThis releases includes a number of new features and a lot of performance improvements.\nHere are some non-exhaustive key updates:\n**New features**\n- [SQL variables](https://duckdb.org/2024/09/09/announcing-duckdb-110#friendly-sql)\n- [Query an query\\_table functions](https://duckdb.org/2024/09/09/announcing-duckdb-110#query-and-query_table-functions)\n- [GeoParquet (Spatial extension features)](https://duckdb.org/2024/09/09/announcing-duckdb-110#spatial-features)\n**Performance improvements**\n- [Dynamic Filter Pushdown from Joins](https://duckdb.org/2024/09/09/announcing-duckdb-110#dynamic-filter-pushdown-from-joins)\n- [Automatic CTE Materialization](https://duckdb.org/2024/09/09/announcing-duckdb-110#automatic-cte-materialization)\n- [Parallel Streaming Queries](https://duckdb.org/2024/09/09/announcing-duckdb-110#automatic-cte-materialization)\nRead more on [DuckDB's 1.1.0 blog](https://duckdb.org/2024/09/09/announcing-duckdb-110.html)."
        },
        {
          "type": "section",
          "title": "September 5, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#september-5-2024 \"Direct link to September 5, 2024\")",
          "content": "- New MotherDuck users are optionally guided through running and analyzing a query upon first logging in to the Web UI."
        },
        {
          "type": "section",
          "title": "August 21,2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-212024 \"Direct link to August 21,2024\")",
          "content": "- MotherDuck now supports [Full Text Search - FTS extension](https://duckdb.org/docs/extensions/full_text_search.html). You can now create a text search index on tables in your MD databases and search them. (Note: Currently, the creation of the FTS index is not supported from MotherDuck-WASM client and app.motherduck.com, but all other clients do.)"
        },
        {
          "type": "section",
          "title": "August 14, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-14-2024 \"Direct link to August 14, 2024\")",
          "content": "- MotherDuck now has an [embedding()](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/ai-functions/embedding/) function to compute `FLOAT[512]` text embeddings based on OpenAI's text-embedding-3-small model. Read more about it in our [announcement blog post](https://motherduck.com/blog/sql-embeddings-for-semantic-meaning-in-text-and-rag/)!\n- MotherDuck now supports [sequences](https://duckdb.org/docs/sql/statements/create_sequence.html), with one small limitation: Table column definitions that refer to a sequence by a fully qualified catalog name are rejected. Note that cross-catalog references are already disallowed by DuckDB."
        },
        {
          "type": "section",
          "title": "August 7, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-7-2024 \"Direct link to August 7, 2024\")",
          "content": "- MotherDuck now supports [foreign keys](https://duckdb.org/docs/sql/constraints.html#foreign-keys). Foreign keys define a column, or set of columns, that refer to a primary key or unique constraint from another table. The constraint enforces that the key exists in the other table."
        },
        {
          "type": "section",
          "title": "July 24, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-24-2024 \"Direct link to July 24, 2024\")",
          "content": "- In the MotherDuck Web UI, users can now drop, rename, and comment on tables/views and columns from the Object Explorer\n- Users can now see the logical size of their MotherDuck databases using `FROM pragma_database_size()`"
        },
        {
          "type": "section",
          "title": "July 10, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-10-2024 \"Direct link to July 10, 2024\")",
          "content": "- **Access Tokens**: Users can now create multiple access tokens and revoke them as needed. Tokens can also be configured to expire after a set number of days. [Learn more](https://motherduck.com/docs/key-tasks/authenticating-and-connecting-to-motherduck/authenticating-to-motherduck/).\n- **Organization domain invites**: Organizations can be configured such that that anyone with the organization's email domain automatically receives an invitation upon signing up.\n- **CREATE SHARE with conflict mode**: Database shares can be created with a conflict mode so if a share with the same name already exists, IF NOT EXISTS will not throw an error and OR REPLACE will replace it with a new share."
        },
        {
          "type": "section",
          "title": "June 26, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-26-2024 \"Direct link to June 26, 2024\")",
          "content": "- **Delta Lake support**: You can now query Delta Lake tables in MotherDuck. [Learn more](https://motherduck.com/docs/integrations/file-formats/delta-lake/).\n- In the MotherDuck Web UI, the Object Explorer interface (that catalogs shares and databases on the left side of the UI) has been revamped.\n- ACH has been added as a billing method, in addition to credit card billing.\n- Resolved an issue affecting large SQL queries in both the MotherDuck UI and the Wasm SDK."
        },
        {
          "type": "section",
          "title": "June 20, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-20-2024 \"Direct link to June 20, 2024\")",
          "content": "- New MotherDuck users are now treated to a \"Welcome to MotherDuck!\" notebook upon first logging on to the Web UI.\n- In the MotherDuck Web UI, the legacy notebook called \"My Notebook\" can now be renamed and/or deleted, and notebooks can now be closed.\n- In the MotherDuck Web UI, helpful links and drop-down menus have been improved.\n- MotherDuck now supports DuckDB's [Spatial Extension](https://duckdb.org/docs/extensions/spatial.html). This extension is pre-installed in MotherDuck, and users are not required to install this extension. Currently, the `GEOMETRY` type has a limitation in that it does not currently render in the MotherDuck Web UI. More details to come."
        },
        {
          "type": "section",
          "title": "June 13, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-13-2024 \"Direct link to June 13, 2024\")",
          "content": "- Free Plan compute usage limits are now being enforced. Queries for users on the Free Plan may be throttled. [Learn more](https://motherduck.com/docs/about-motherduck/billing/pricing/#free-plan)"
        },
        {
          "type": "section",
          "title": "June 11, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-11-2024 \"Direct link to June 11, 2024\")",
          "content": "- MotherDuck is now Generally Available!"
        },
        {
          "type": "section",
          "title": "June 6, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-6-2024 \"Direct link to June 6, 2024\")",
          "content": "- MotherDuck now supports [organization-scoped and discoverable shares](https://motherduck.com/docs/key-tasks/sharing-data/sharing-overview/).\n- MotherDuck now supports storing [Hugging Face type secrets](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-secret/)."
        },
        {
          "type": "section",
          "title": "June 3, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-3-2024 \"Direct link to June 3, 2024\")",
          "content": "- MotherDuck now supports DuckDB version 1.0.0. If you have upgraded to 0.10.2+, you can connect with clients that are either of version 0.10.2, 0.10.3, or 1.0.0."
        },
        {
          "type": "section",
          "title": "May 30, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-30-2024 \"Direct link to May 30, 2024\")",
          "content": "- MotherDuck now supports DuckDB version 0.10.3. If you have upgraded to 0.10.2+, you can connect with clients that are either of version 0.10.2 or 0.10.3.\n- Added support to read datasets directly from HuggingFace. Learn more about this new feature [here](https://duckdb.org/2024/05/29/access-150k-plus-datasets-from-hugging-face-with-duckdb.html).\n- Added support for [ARRAY Type](https://duckdb.org/docs/sql/data_types/array.html#:~:text=Array%20Type%20%E2%80%93%20DuckDB&text=An%20ARRAY%20column%20stores%20fixed,ARRAY%20%2C%20LIST%20and%20STRUCT%20types.) in MotherDuck UI.\n- MotherDuck UI now supports multiple notebooks.\n- Fixed a bug in which running the `UPDATE SHARE` command would kill ongoing queries."
        },
        {
          "type": "section",
          "title": "May 15, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-15-2024 \"Direct link to May 15, 2024\")",
          "content": "- MotherDuck now supports DuckDB 0.10.2. All new MotherDuck users default to DuckDB version 0.10.2, and all existing users can now permanently migrate to DuckDB version 0.10.2. DuckDB version 0.10.2 features a large number of stability and performance improvements, and all users are encourage to migrate.\n- Starting with DuckDB 0.10.2, MotherDuck now supports multiple versions of DuckDB at once. For example, you could use DuckDB version 0.10.3 in the CLI and DuckDB version 1.0 in Python.\n- MotherDuck now supports [Multi-Statement Transactions](https://duckdb.org/docs/sql/statements/transactions.html). You must be on DuckDB version 0.10.2 or above.\n- MotherDuck now supports [Indexes](https://duckdb.org/docs/sql/indexes.html) for the purpose of constraints of types `UNIQUE` or `PRIMARY KEY`. For example, you can leverage `INSERT ON CONFLICT` to dedupe or upsert your data. [Learn more](https://duckdb.org/docs/sql/statements/insert#on-conflict-clause). Indexes are not yet being utilized in MotherDuck for query acceleration.\n- MotherDuck now supports Secrets syntax consistent with DuckDB 0.10 and above. [Learn more](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-secret/).\n- [FixIt](https://motherduck.com/docs/getting-started/interfaces/motherduck-quick-tour/#writing-sql-with-confidence-using-fixit) is now 2-3x faster.\n- Improved reliability of the service during releases. Moving forward, MotherDuck releases should not disrupt ongoing queries and workloads for users."
        },
        {
          "type": "section",
          "title": "May 8, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-8-2024 \"Direct link to May 8, 2024\")",
          "content": "- You can now preview DuckDB version 0.10.2 in MotherDuck.\n- You can now [choose your organization's pricing plan](https://motherduck.com/docs/about-motherduck/billing/managing-billing/#choosing-your-billing-plan) using the [Plans](https://app.motherduck.com/settings/plans) page in the Settings section of the MotherDuck Web UI.\n- You can now configure your organization's payment method in the [Billing](https://app.motherduck.com/settings/billing) page in the Settings section of the MotherDuck Web UI. Free Plan customers are not required to configure a payment method."
        },
        {
          "type": "section",
          "title": "May 1, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-1-2024 \"Direct link to May 1, 2024\")",
          "content": "- Fixed a bug, in which MotherDuck releases would kill running queries. Releases no longer disrupt ongoing queries and workloads.\n- A number of under the hood stability improvements."
        },
        {
          "type": "section",
          "title": "April 25, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-25-2024 \"Direct link to April 25, 2024\")",
          "content": "- Improved reliability of `ATTACH` operations.\n- Various reliability and polish improvements."
        },
        {
          "type": "section",
          "title": "April 24, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-24-2024 \"Direct link to April 24, 2024\")",
          "content": "- \\*\\*\\[Preview\\] The MotherDuck [Wasm SDK](https://motherduck.com/docs/sql-reference/wasm-client/) is now available for app developers. Read more about the SDK in the [blog annoucement](https://motherduck.com/blog/building-data-applications-with-motherduck/)."
        },
        {
          "type": "section",
          "title": "April 17, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-17-2024 \"Direct link to April 17, 2024\")",
          "content": "- [Billing Portal](https://motherduck.com/docs/about-motherduck/billing/managing-billing/) is now available in the MotherDuck Web UI. You can use the Billing Portal to view your organization's incurred usage and current and past invoices.\n- You can now invite your teammates to [Organizations](https://motherduck.com/docs/key-tasks/managing-organizations/). Currently, Organizations are useful to group users together to monitor incurred usage in the Billing Portal, and additional capabilities will land in coming weeks.\n- Fixed an issue, in which MotherDuck releases would cancel running queries."
        },
        {
          "type": "section",
          "title": "April 10, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-10-2024 \"Direct link to April 10, 2024\")",
          "content": "- Catalog changes in one MotherDuck client will now automatically propagate to other clients.\n- MotherDuck now supports indexes on temporary tables."
        },
        {
          "type": "section",
          "title": "March 20, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#march-20-2024 \"Direct link to March 20, 2024\")",
          "content": "- Fixed an issue, in which users' runtimes can become unresponsive.\n- In the MotherDuck UI, improved how row counts and query times are calculated.\n- A variety of additional bug fixes and infrastructure-level improvements."
        },
        {
          "type": "section",
          "title": "March 7, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#march-7-2024 \"Direct link to March 7, 2024\")",
          "content": "- Operations on all databases that create shares (using `CREATE SHARE`), create databases (using `CREATE DATABASE`), or update shares (using `UPDATE SHARE`) are now metadata-only and copy no data."
        },
        {
          "type": "section",
          "title": "February 29, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#february-29-2024 \"Direct link to February 29, 2024\")",
          "content": "- A variety of fixes and improvements across the product."
        },
        {
          "type": "section",
          "title": "February 22, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#february-22-2024 \"Direct link to February 22, 2024\")",
          "content": "- Numerous bug fixes and stability improvements across the entire product."
        },
        {
          "type": "section",
          "title": "February 14, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#february-14-2024 \"Direct link to February 14, 2024\")",
          "content": "Your browser does not support the video tag.\n- In the MotherDuck web UI, you can now visualize your tables and query results with the [Column Explorer](https://motherduck.com/blog/introducing-column-explorer/).\n- For any database created starting today, operations on these databases that create shares (using `CREATE SHARE`), create databases (using `CREATE DATABASE`), and update shares (using `UPDATE SHARE`) are metadata-only and copy no data."
        },
        {
          "type": "section",
          "title": "February 13, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#february-13-2024 \"Direct link to February 13, 2024\")",
          "content": "- You are no longer required to provide a share name when creating shares. In this case, the created share will be named the same as the source database. For example, executing `CREATE SHARE FROM mydb` would create a share named `mydb`; if your current share is `db`, then `CREATE SHARE` would create a share named `db`. See [`CREATE SHARE`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-share/) syntax.\n- In CLI or Python, MotherDuck no longer displays the authentication token by default. You can retrieve the authentication token by running [`PRAGMA PRINT_MD_TOKEN`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/print-md-token/).\n- Support for DuckDB version 0.9.1 has ended."
        },
        {
          "type": "section",
          "title": "January 04, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#january-04-2024 \"Direct link to January 04, 2024\")",
          "content": "New Features:\n- MotherDuck now supports [DuckDB macros](https://motherduck.com/docs/sql-reference/duckdb-sql-reference/duckdb-statements/create-macro/).\n- MotherDuck now supports [DuckDB ENUM data types](https://motherduck.com/docs/sql-reference/duckdb-sql-reference/enum/).\n- Fully qualified column names in SELECT clauses are now supported. For example:\n```codeBlockLines_e6Vv\nSELECT schema.table.column FROM schema.table\n```\nUpdates and Fixes:\n- Fixed a bug, in which prepared statements for INSERT operations did not work.\n- In the MotherDuck web UI, data exports are now faster.\n- Rolled out major infrastructure improvements in hybrid query execution, resulting in faster and more reliable hybrid queries."
        },
        {
          "type": "section",
          "title": "January 03, 2024 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#january-03-2024 \"Direct link to January 03, 2024\")",
          "content": "Your browser does not support the video tag.\n- [FixIt](https://motherduck.com/docs/getting-started/interfaces/motherduck-quick-tour/#writing-sql-with-confidence-using-fixit) helps you resolve common SQL errors by offering fixes in-line."
        },
        {
          "type": "section",
          "title": "November 30, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#november-30-2023 \"Direct link to November 30, 2023\")",
          "content": "- In the MotherDuck web UI, you can now copy query results to the clipboard or export query results as CSV, TSV, Parquet, or JSON files.\n![Export query results](https://motherduck.com/docs/assets/images/release-notes-1.15.0-export-b6cd550a4cd541b96a07a155ad43f684.png)\n- In the MotherDuck web UI, query error messages are now easier to read.\n![Query error message](https://motherduck.com/docs/assets/images/release-notes-1.15.0-error-messages-04327791b6d5ab0899e34ebd1a234518.png)"
        },
        {
          "type": "section",
          "title": "November 15, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#november-15-2023 \"Direct link to November 15, 2023\")",
          "content": "- MotherDuck has been upgraded to DuckDB 0.9.2. You can use either DuckDB 0.9.1 or DuckDB 0.9.2, but not both, until December 6th."
        },
        {
          "type": "section",
          "title": "November 3rd, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#november-3rd-2023 \"Direct link to November 3rd, 2023\")",
          "content": "- You can now [query Iceberg tables](https://motherduck.com/docs/integrations/file-formats/apache-iceberg/) on object storage.\n- Improved stability of share attaches.\n- In the MotherDuck web UI, a new database selector now enables you to use a specific database for each notebook cell."
        },
        {
          "type": "section",
          "title": "October 25, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-25-2023 \"Direct link to October 25, 2023\")",
          "content": "- In the MotherDuck web UI, you can now move and reorder individual notebook cells.\n- In the MotherDuck web UI, the MotherDuck-specific SQL syntax is now highlighted.\n- In the MotherDuck web UI, column histograms are now opt-in on a per-result basis, rather than a global opt-out via Settings.\n- Improved how the MotherDuck web UI displays datetime data types, matching formatting in the CLI.\n- In the MotherDuck web UI, you can now easily copy-paste a rectangular selection of query results into Google Sheets or Excel."
        },
        {
          "type": "section",
          "title": "October 16, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#october-16-2023 \"Direct link to October 16, 2023\")",
          "content": "MotherDuck has been upgraded to DuckDB 0.9.1 🎉\nPlease see the migrations guide for more info!\n- You can now query Azure object storage. See [documentation](https://motherduck.com/docs/integrations/cloud-storage/azure-blob-storage/) for more info.\n- You can now easily load AWS credentials used locally into MotherDuck. Please see syntax for [`CREATE SECRET`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-secret/) for more info.\n- Better performance and reliability with lower memory usage.\n- More intelligent parsing of CSV files."
        },
        {
          "type": "section",
          "title": "September 21, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#september-21-2023 \"Direct link to September 21, 2023\")",
          "content": "- The MotherDuck web UI supports Attaching and Detaching databases and shows detached databases.\n- The MotherDuck web UI now loads significantly faster. This is an additional improvement over August 30, 2023.\n- When a user updates a shared database, all consumers automatically receive the update within 1 minute.\n- Support `CREATE OR REPLACE DATABASE` and `CREATE IF NOT EXISTS DATABASE`.\n- Fixed a bug in which queries with long commit times would result in the dreaded \" `Invalid Error: RPC 'SETUP_PLAN_FRAGMENTS' failed: Deadline Exceeded (DEADLINE_EXCEEDED)`\" error.\n- Performance and stability of uploads has been improved.\n- The MotherDuck web UI now displays decimals correctly."
        },
        {
          "type": "section",
          "title": "August 30, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-30-2023 \"Direct link to August 30, 2023\")",
          "content": "- The MotherDuck web UI now loads significantly faster.\n- The MotherDuck web UI now supports autocomplete. As you write SQL in the UI, on every keystroke autocomplete brings up query syntax suggestions. You can turn off autocomplete in Web UI settings, found under the gear icon in top right.\n- In the MotherDuck web UI, you can now execute multiple SQL statements in the same SQL cell."
        },
        {
          "type": "section",
          "title": "August 23, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-23-2023 \"Direct link to August 23, 2023\")",
          "content": "- Fixed a bug, in which large uploads and downloads would fail.\n- Improved performance of uploading data into MotherDuck from all supported sources.\n- Added [SHOW ALL DATABASES](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/show-databases/) DDL command. This command enables you to list all database types, including MotherDuck databases, DuckDB databases, and databases that were created from shares.\n- In the MotherDuck web UI, you can now cancel queries.\n![cancel query](https://motherduck.com/docs/assets/images/release0823_1-3f2c8d11848257297d3f140e7a1ba098.png)\n- In the MotherDuck web UI, you can now add files of type JSON and files with arbitrary postfixes.\n- In the MotherDuck web UI, under the 'Help' menu, you can now find the service specific Terms of Service."
        },
        {
          "type": "section",
          "title": "August 17, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-17-2023 \"Direct link to August 17, 2023\")",
          "content": "- Numerous stability and performance improvements across the entire product.\n- Added more descriptive error messages in a number of areas.\n- Better timestamp support in the MotherDuck UI."
        },
        {
          "type": "section",
          "title": "August 01, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#august-01-2023 \"Direct link to August 01, 2023\")",
          "content": "- You can now copy a MotherDuck database through [CREATE DATABASE](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-database/) using `CREATE DATABASE cloud_db FROM another_cloud_db`.\n- Fixed a https certificate error that was appearing on Windows machine when downloading/loading the MotherDuck extension through the CLI.\n- Fixed a bug where [DESCRIBE SHARE](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/describe-share/) was not returning the actual database name."
        },
        {
          "type": "section",
          "title": "July 26, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-26-2023 \"Direct link to July 26, 2023\")",
          "content": "- You can now use MotherDuck in CLI or Python with the Windows operating system.\n- LIST and DESCRIBE SHARES SQL commands now return the database name instead of the snapshot name.\n- Improved resilience of large uploads.\n- Added more descriptive error messages for DDL queries."
        },
        {
          "type": "section",
          "title": "July 21, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#july-21-2023 \"Direct link to July 21, 2023\")",
          "content": "- Added DDL for [`DESCRIBE SHARE`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/describe-share/) and [`UPDATE SHARE`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/update-share/).\n- Added DDL for [`CREATE [OR REPLACE] SECRET`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/create-secret/) and [`DROP SECRET`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/delete-secret/).\n- Added `RESTRICT` and `CASDADE` options to `DROP DATABASE` DDL. See [documentation](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/drop-database/).\n- The current database, set with USE DATABASE, is now persisted across sessions in the web UI.\n- Data uploads and downloads have been accelerated by roughly 3x by compressing data over the wire.\n- Numerous stability and performance improvements across the entire product.\n- Added more descriptive error messages in a number of areas."
        },
        {
          "type": "section",
          "title": "June 29, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-29-2023 \"Direct link to June 29, 2023\")",
          "content": "- You can now use AI to help you write SQL with the `prompt_sql` function, answer questions about your data with the `prompt_query` pragma, describe your data with the `prompt_schema` pragma, and fix your SQL with the `prompt_fixup` function. See [documentation](https://motherduck.com/docs/key-tasks/ai-and-motherduck/ai-features-in-ui/)."
        },
        {
          "type": "section",
          "title": "June 27, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-27-2023 \"Direct link to June 27, 2023\")",
          "content": "- Added support for [`DROP SHARE [IF EXISTS]`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/drop-share/),\n[`LIST SHARES`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/list-shares/), and\n[`LIST SECRETS`](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/list-secrets/) operations.\nPreviously these operations were supported via table functions.\nThe MotherDuck web UI now supports creating, deleting, and listing S3 secrets.\n- Numerous improvements to the MotherDuck web UI.\n- Fixed a bug, in which the share URL was not returning after running the `CREATE SHARE` command in the CLI.\n- Referencing database objects is now case insensitive. For example, if a database `DuCkS` exists, you can now reference it as `ducks` or `DUCKS`. When listing databases, you will see `DuCkS`."
        },
        {
          "type": "section",
          "title": "June 23, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-23-2023 \"Direct link to June 23, 2023\")",
          "content": "- Numerous fixes to improve the stability and reliability of our authentication process and token expiry.\n- In the MotherDuck web UI there is now a new drop-down menu on User Profile (upper right) with options to access settings, send an invite, and log out.\n- Added support for `IF EXISTS` option to the `DROP DATABASE` SQL command. See [documentation](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/drop-database/).\n- Added support for allowing the `motherduck_token` parameter in the connection string.\n- Added md\\_list\\_secrets() table function. Because MotherDuck currently only supports a single secret, this function returns either `TRUE` or `FALSE` depending on whether a secret exists. See [documentation](https://motherduck.com/docs/sql-reference/motherduck-sql-reference/list-secrets/).\n- Fixed a bug in the MotherDuck web UI where tables were rendered incorrectly."
        },
        {
          "type": "section",
          "title": "June 21, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-21-2023 \"Direct link to June 21, 2023\")",
          "content": "- In the MotherDuck web UI, the interactive query results panel now supports all DuckDB data types.\n- Easier signup flow for new users.\n- Performance of loading data into MotherDuck has been improved.\n- Added support for `CREATE [OR REPLACE | IF NOT EXISTS] DATABASE` and `CREATE DATABASE FROM CURRENT_DATABASE()`.\n- A concurrency issue on dropping and recreating shares has been resolved.\n- Timeout handling for hybrid queries has been improved.\n- The MotherDuck connection parameter `deny_local_access` has been renamed to `saas_mode` and now sets both `enable_external_access=false` and `lock_configuration=true` DuckDB properties. In practice, this means that when connecting to MotherDuck with the `deny_local_access=true` parameter, users will _not_ be able to read/write local files, read/write local DuckDB databases, install/load any extensions or update any configuration. See [documentation](https://motherduck.com/docs/key-tasks/authenticating-and-connecting-to-motherduck/authenticating-to-motherduck/#authentication-using-saas-mode).\n- Numerous other improvements."
        },
        {
          "type": "section",
          "title": "June 15, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-15-2023 \"Direct link to June 15, 2023\")",
          "content": "- MotherDuck now supports DuckDB [0.8.1](https://github.com/duckdb/duckdb/releases/tag/v0.8.1). Currently, MotherDuck only supports a single version of DuckDB at a time so you must upgrade your DuckDB instances to 0.8.1.\n- Performance of loading data into MotherDuck has been drastically improved.\n- Database name in SQL command `CREATE DATABASE` is now a literal. You need to leave the database name unquoted. For example:\n  - Supported: `CREATE DATABASE ducks;`\n  - Supported: `CREATE DATABASE \"ducks\";`\n  - No longer supported: `CREATE DATABASE 'ducks';`\n- You can now create a share using the `CREATE SHARE` statement, in addition to previously supported table function `md_create_database_share()`:\n  - Supported: `CREATE SHARE myshare FROM ducks;`\n  - Supported: `CALL md_create_database_share( 'myshare' , 'ducks' );`\n- You can now write data to s3 using the `COPY TO` command.\n- In the web UI entering and exiting full screen mode has been simplified. You can also choose to only display the query editor or the query results using the overflow menu.\n- In the web UI you can now work with compound data types from json in interactive query results.\n- You can now use both lowercase and uppercase versions of the environment variable `motherduck_token` (e.g. `MOTHERDUCK_TOKEN`)."
        },
        {
          "type": "section",
          "title": "June 7, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#june-7-2023 \"Direct link to June 7, 2023\")",
          "content": "- Views are now supported.\n- Query results in the web UI are now interactive. Powered by [Tad](https://www.tadviewer.com/) and DuckDB in WASM, you can now quickly sort, filter and pivot results of a SQL query. Click on column headers to sort, or the pivot icon to open the control surface.\n![query results](https://motherduck.com/docs/assets/images/release0607_1-f60a8e204a40a63c8ac1103722ca5cd7.png)\n- Query results now include interactive column histograms for numeric columns. The gray background area of the column histogram is a brush that can be dragged to interactively filter results.\n![query results 2](https://motherduck.com/docs/assets/images/release0607_2-61346e96d5d23267ae3a1c539e2599fe.png)\n- The Motherduck extension for CLI and Python auto-updates itself. Users no longer need to run 'FORCE INSTALL motherduck' to update their MotherDuck-powered DuckDB instances.\nNote: of course, to get this goodness, we ask you to run force install one last time.\n- Various stability and usability improvements."
        },
        {
          "type": "section",
          "title": "May 31st, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-31st-2023 \"Direct link to May 31st, 2023\")",
          "content": "**Summary**\n- SQL queries in the web UI are now automatically saved in local storage in your web browser and restored when you reload the page.\n- The MotherDuck extension is now available for Linux on ARM64!\n- Support [ON CONFLICT](https://duckdb.org/docs/sql/statements/insert.html#on-conflict-clause) clause.\n- New setting `deny_local_access` to lock down filesystem and extension loading (note: does not prevent DuckDB database access)."
        },
        {
          "type": "section",
          "title": "May 24, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-24-2023 \"Direct link to May 24, 2023\")",
          "content": "**Summary**\n- Various stability improvements and bug fixes"
        },
        {
          "type": "section",
          "title": "May 22, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-22-2023 \"Direct link to May 22, 2023\")",
          "content": "**Summary**\n- The MotherDuck service is upgraded to DuckDB 0.8.0\n- Catalog schemas are now supported.\n- Querying `md_databases()` no longer returns snapshots.\n- Shares that you create are no longer auto-attached. As the creator, you can attach them via `attach <share_url>`\n- Various stability improvements and bug fixes\n**_Known issues_**\n- Some shares appear as \"empty\" databases. Please report to [support@motherduck.com](mailto:support@motherduck.com) if you spot a sharing issue."
        },
        {
          "type": "section",
          "title": "May 17, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-17-2023 \"Direct link to May 17, 2023\")",
          "content": "- The DuckDB ICU [extension](https://duckdb.org/docs/extensions/overview.html#all-available-extensions) is now enabled by default. This extension adds support for time zones and collations using the ICU library.\n- The web UI now displays your avatar instead of initials in the user menu\n- The first database alphabetically is now used for querying by default in web UI. CLI behavior has not changed – if you don't pass a specific database through the connection string, the default database _my\\_db_ will be used for querying.\nNOTE: this will change once we upgrade to the just-released DuckDB 0.8.0\n- Output of query EXPLAIN is now more user-friendly\n- Various stability improvements and bugfixes"
        },
        {
          "type": "section",
          "title": "May 5, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-5-2023 \"Direct link to May 5, 2023\")",
          "content": "- Fixed a bug, in which users were unable to supply the authentication token in-line in the connection string. For instance `.open md:?token=123123` or `duckdb md:?token=3333`.\n- DELETE and UPDATE table operations are now supported."
        },
        {
          "type": "section",
          "title": "May 3, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#may-3-2023 \"Direct link to May 3, 2023\")",
          "content": "- Stability of DML and DDL operations has been greatly improved\n- Hybrid query execution has now been upgraded to execute many query types more efficiently\n- ~~You can now upload your current DuckDB database using the `CREATE DATABASE FROM 'CURRENT_DATABASE'` operation~~ (no longer supported as of October 2025)\n- In the web UI you can now find a link to MotherDuck's technical documentation\n- In the web UI you can now upload files from your local computer to MotherDuck\n- In programmatic interfaces (JDBC, CLI, Python) you can now connect to a specific database using syntax `md:<database name>` or `motherduck:<database name>`\n- MotherDuck now creates a default database called `my_db` for you. This is the database you connect to if you do not specify a database when connecting to MotherDuck"
        },
        {
          "type": "section",
          "title": "April 26, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-26-2023 \"Direct link to April 26, 2023\")",
          "content": "- You can now work with multiple databases - cloud or local. You can now query across multiple cloud or local databases\n- You can now save your S3 credentials in MotherDuck using the MD\\_CREATE\\_SECRET operation\n- You can now upload DuckDB databases to MotherDuck using the CREATE DATABASE FROM operation\n- MotherDuck UI now has improved notebook experience"
        },
        {
          "type": "section",
          "title": "April 19, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-19-2023 \"Direct link to April 19, 2023\")",
          "content": "- Various stability, performance, and UI improvements"
        },
        {
          "type": "section",
          "title": "April 12, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#april-12-2023 \"Direct link to April 12, 2023\")",
          "content": "- The JSON extension to DuckDB is now pre-installed automatically in the web UI.\n- The table viewer component in the Web UI is now a simple table (rather than an interactive pivot table). This should greatly improve time to first render on query results, especially for small queries. We plan to re-enable the pivot table in an upcoming release, once some underlying performance issues are resolved.\n- The duck feet are paddling very hard underwater (numerous stability and performance improvements)."
        },
        {
          "type": "section",
          "title": "March 30, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#march-30-2023 \"Direct link to March 30, 2023\")",
          "content": "- Fixed: [auto\\_detection of schema of .csv fails in WASM](https://lindie.app/share/92ac65cc6e006bff2fb60417388294965ef2d4c7)\n- Fixed: intermittent \"Error reading catalog: Cancelling all calls\" error\n- Numerous stability and performance improvements"
        },
        {
          "type": "section",
          "title": "March 22, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#march-22-2023 \"Direct link to March 22, 2023\")",
          "content": "- CLI uses the same database by default as the web app (first sorted alphabetically)\n- Multiple improvements in the MotherDuck UI\n- Numerous stability and performance improvements\n- Enabled query EXPLAIN for queries that execute in hybrid mode"
        },
        {
          "type": "section",
          "title": "March 8, 2023 [​](https://motherduck.com/docs/about-motherduck/release-notes/\\#march-8-2023 \"Direct link to March 8, 2023\")",
          "content": "- Numerous stability and performance improvements\n- Vastly improved performance of loading multiple CSVs in the same command\n- Fixed a bug in CLI, in which authentication via browser would fail"
        },
        {
          "type": "hero",
          "h1": "March 1, 2023",
          "sub": "",
          "cta": "",
          "content": "> Even more goodies!\n- Delivered major improvements to hybrid execution, resulting in better efficiency, stability, and performance\n- Fixed a bug in UI, in which dropping and creating a database with the same name displayed incorrect information\n- Migrated to DuckDB 0.7.1\n- Fixed an error message when running MotherDuck commands in the CLI without running .open"
        },
        {
          "type": "hero",
          "h1": "January 26, 2023",
          "sub": "",
          "cta": "",
          "content": "> We're back with more exciting improvements!\n- Addressed server timeouts associated with long-running queries. Still triaging other potential issues with long running issues but network tier issues should be mitigated to a large degree.\n- Empty databases now appear in the catalog in UI\n- Added an MD\\_VERSION Pragma function\n- Implemented Oauth sign-in flow from native client\n- Upgraded MotherDuck-hosted DuckDB to version 0.6.1\n- Fixed a number of bugs across the entire service"
        },
        {
          "type": "hero",
          "h1": "December 23, 2022",
          "sub": "",
          "cta": "",
          "content": "> Our first release! Duckies first steps 🦆\n- [October 9, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#october-9-2025)\n- [September 30, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#september-30-2025)\n- [September 10, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#september-10-2025)\n- [September 4, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#september-4-2025)\n- [August 21, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#august-21-2025)\n- [August 13, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#august-13-2025)\n- [August 12, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#august-12-2025)\n- [August 8, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#august-8-2025)\n- [July 31, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#july-31-2025)\n- [July 25, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#july-25-2025)\n- [July 16, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#july-16-2025)\n- [July 14, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#july-14-2025)\n- [July 01, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#july-01-2025)\n- [June 26, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#june-26-2025)\n- [June 18, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#june-18-2025)\n- [June 12, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#june-12-2025)\n- [June 5, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#june-5-2025)\n- [May 29, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#may-29-2025)\n- [May 22, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#may-22-2025)\n- [May 16, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#may-16-2025)\n- [May 1, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#may-1-2025)\n- [April 23, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#april-23-2025)\n- [April 22, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#april-22-2025)\n- [April 17, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#april-17-2025)\n- [April 10, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#april-10-2025)\n- [April 3, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#april-3-2025)\n- [March 20, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#march-20-2025)\n- [March 6, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#march-6-2025)\n- [February 19, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#february-19-2025)\n- [February 11, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#february-11-2025)\n- [February 6, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#february-6-2025)\n- [January 8, 2025](https://motherduck.com/docs/about-motherduck/release-notes/#january-8-2025)\n- [December 12, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#december-12-2024)\n- [December 4, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#december-4-2024)\n- [November 21, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#november-21-2024)\n- [November 7, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#november-7-2024)\n- [October 31, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#october-31-2024)\n- [October 17, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#october-17-2024)\n- [October 14, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#october-14-2024)\n- [October 9, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#october-9-2024)\n- [October 2, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#october-2-2024)\n- [September 25, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#september-25-2024)\n- [September 16, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#september-16-2024)\n- [September 5, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#september-5-2024)\n- [August 21,2024](https://motherduck.com/docs/about-motherduck/release-notes/#august-212024)\n- [August 14, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#august-14-2024)\n- [August 7, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#august-7-2024)\n- [July 24, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#july-24-2024)\n- [July 10, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#july-10-2024)\n- [June 26, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#june-26-2024)\n- [June 20, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#june-20-2024)\n- [June 13, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#june-13-2024)\n- [June 11, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#june-11-2024)\n- [June 6, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#june-6-2024)\n- [June 3, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#june-3-2024)\n- [May 30, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#may-30-2024)\n- [May 15, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#may-15-2024)\n- [May 8, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#may-8-2024)\n- [May 1, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#may-1-2024)\n- [April 25, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#april-25-2024)\n- [April 24, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#april-24-2024)\n- [April 17, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#april-17-2024)\n- [April 10, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#april-10-2024)\n- [March 20, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#march-20-2024)\n- [March 7, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#march-7-2024)\n- [February 29, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#february-29-2024)\n- [February 22, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#february-22-2024)\n- [February 14, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#february-14-2024)\n- [February 13, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#february-13-2024)\n- [January 04, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#january-04-2024)\n- [January 03, 2024](https://motherduck.com/docs/about-motherduck/release-notes/#january-03-2024)\n- [November 30, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#november-30-2023)\n- [November 15, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#november-15-2023)\n- [November 3rd, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#november-3rd-2023)\n- [October 25, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#october-25-2023)\n- [October 16, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#october-16-2023)\n- [September 21, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#september-21-2023)\n- [August 30, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#august-30-2023)\n- [August 23, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#august-23-2023)\n- [August 17, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#august-17-2023)\n- [August 01, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#august-01-2023)\n- [July 26, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#july-26-2023)\n- [July 21, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#july-21-2023)\n- [June 29, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#june-29-2023)\n- [June 27, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#june-27-2023)\n- [June 23, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#june-23-2023)\n- [June 21, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#june-21-2023)\n- [June 15, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#june-15-2023)\n- [June 7, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#june-7-2023)\n- [May 31st, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#may-31st-2023)\n- [May 24, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#may-24-2023)\n- [May 22, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#may-22-2023)\n- [May 17, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#may-17-2023)\n- [May 5, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#may-5-2023)\n- [May 3, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#may-3-2023)\n- [April 26, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#april-26-2023)\n- [April 19, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#april-19-2023)\n- [April 12, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#april-12-2023)\n- [March 30, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#march-30-2023)\n- [March 22, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#march-22-2023)\n- [March 8, 2023](https://motherduck.com/docs/about-motherduck/release-notes/#march-8-2023)\n![brand logo](https://aqueduct-public-assets-bucket.s3.us-east-2.amazonaws.com/runllm/motherduck.svg)Ask AI"
        }
      ],
      "images": [
        "https://motherduck.com/docs/assets/ideal-img/storage_monitor_ui.3fdfda2.540.png",
        "https://motherduck.com/docs/assets/ideal-img/chat-widget-optimization.9b1b209.540.png",
        "https://motherduck.com/docs/assets/ideal-img/boolean-cell-styling.430efa6.540.png",
        "https://motherduck.com/docs/assets/images/release-notes-250422-new_cell_layout-fa1eba376e34a0c6e6cd5f9bfa0447e5.png",
        "https://motherduck.com/docs/assets/images/release-notes-1.15.0-export-b6cd550a4cd541b96a07a155ad43f684.png",
        "https://motherduck.com/docs/assets/images/release-notes-1.15.0-error-messages-04327791b6d5ab0899e34ebd1a234518.png",
        "https://motherduck.com/docs/assets/images/release0823_1-3f2c8d11848257297d3f140e7a1ba098.png",
        "https://motherduck.com/docs/assets/images/release0607_1-f60a8e204a40a63c8ac1103722ca5cd7.png",
        "https://motherduck.com/docs/assets/images/release0607_2-61346e96d5d23267ae3a1c539e2599fe.png",
        "https://aqueduct-public-assets-bucket.s3.us-east-2.amazonaws.com/runllm/motherduck.svg"
      ]
    },
    {
      "url": "https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/",
      "slug": "blog-taming-wild-csvs-with-duckdb-data-engineering",
      "title": "Taming Wild CSVs: Advanced DuckDB Techniques for Data Engineers - MotherDuck Blog",
      "sections": [
        {
          "type": "hero",
          "h1": "Taming Wild CSVs: Advanced DuckDB Techniques for Data Engineers",
          "sub": "",
          "cta": "",
          "content": "MotherDuck's first European cloud region is coming![Join the waitlist to get notified.](https://motherduck.com/product/eu-region/?utm_source=eyebrow)\n[Motherduck home](https://motherduck.com/)\n[Sign Up](https://app.motherduck.com/?auth_flow=signup)\n[GO BACK TO BLOG](https://motherduck.com/blog/)\n2025/05/17 - 12 min read\nBY\n[Ryan Boyd](https://motherduck.com/authors/ryan-boyd/)\nIt's 2:30 AM. The office is empty. Your coffee's gone cold, and you're staring blankly at your screen as it mockingly displays: `Error: Could not convert string 'N/A' to INTEGER` on line 56,789. All you wanted was to import a \"simple\" CSV export from that upstream system. Sound familiar?\nWe've all been in CSV purgatory. That moment when what should be a five-minute task turns into a multi-hour ordeal because somewhere, buried deep in that innocent-looking file, lurks an inconsistent delimiter, a rogue quote, or my personal favorite—columns that mysteriously appear and disappear like fish fry diving underwater to avoid being eaten by our duck friends.\nI've spent countless hours wrestling with problematic CSVs, but after discovering some of DuckDB's lesser-known features, those late-night CSV battles have become far less common. While DuckDB's automatic CSV reader is already impressively smart, knowing a few advanced techniques can save you from writing custom preprocessing scripts when things get messy.\nIn this guide, I'll share the DuckDB techniques that have repeatedly saved me from CSV hell:\n- How to diagnose what DuckDB actually thinks your [**CSV looks like**](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#peeking-under-the-hood-sniffcsv)\n- Deep dive into the [**CSV sniffer**](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#how-the-sniffer-works) and how it works under the hood\n- Ways to [**handle problematic rows**](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#wrangling-the-errors) without aborting your entire import\n- Strategies for [**dealing with inconsistent schemas**](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#handling-shifting-schemas-unionbyname) across files\n- [**Fine-tuning options**](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#fine-tuning-detection-and-overrides) when auto-detection needs a helping hand\n- Real-world robustness: how DuckDB performs on a [**benchmark of messy CSVs**](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#duckdbs-csv-parser-champion-of-the-pollock-benchmark)\nLet's dive in and see if we can make your next CSV import session a little less...quackers."
        },
        {
          "type": "section",
          "title": "**Peeking Under the Hood: sniff\\_csv**",
          "content": "Before attempting to load the data using DuckDB’s auto-detection capabilities, it's incredibly useful to understand what DuckDB _thinks_ it's dealing with. Is it guessing the delimiter correctly? Did it detect the header? What types is it inferring? The [sniff\\_csv()](https://duckdb.org/docs/stable/data/csv/auto_detection.html) function is your reconnaissance tool here.\nInstead of blindly running `read_csv` and potentially hitting errors, run `sniff_csv` first. It analyzes a sample of the file and reports back the detected dialect, types, header presence, and more.\n**Let’s imagine a file [events.csv](http://duckdb-example-files.s3-website-us-east-1.amazonaws.com/2025-blog-post-taming-wild-csvs/events.csv):**\n```hljs txt\nEventDate|Organizer|City|Venue\n2022-03-01|OpenTech|San Francisco, CA|Moscone Center, Hall A\n2022-03-02|OpenTech|San Francisco, CA|Moscone Center, Hall B\n2022-03-03|OpenTech|San Francisco, CA|Moscone Center, Hall C\n```\n**Let's see what DuckDB makes of this:**\n```hljs sql\nFROM sniff_csv('events.csv');\n```\nINFO: Using full http URLs\nFor brevity, we'll just include the filename in each of the example commands below. You can download the example files using the links (eg, how events.csv is linked above). However, you can also specify the full http URL instead because DuckDB supports the http protocol for retrieving CSV files.\n```hljs sql\nFROM sniff_csv('http://duckdb-example-files.s3-website-us-east-1.amazonaws.com/2025-blog-post-taming-wild-csvs/events.csv');\n```\n**You can also control how much of the file it samples:**\n```hljs sql\nFROM sniff_csv('events.csv', sample_size=10000); -- Sample 10k rows\n```\n**Or sample the whole file (careful with huge files!):**\n```hljs sql\nFROM sniff_csv('events.csv', sample_size=-1);\n```\n**The output provides a wealth of information in a single row table:**\n- `Delimiter`, `Quote`, `Escape`, `NewLineDelimiter`: The detected structural characters.\n- `SkipRows`: Number of rows it thinks should be skipped at the start.\n- `HasHeader`: Boolean flag if a header is detected.\n- `Columns`: A list of structs showing detected column names and types (e.g., `{'name': 'VARCHAR', 'age': 'BIGINT'}`).\n- `DateFormat`, `TimestampFormat`: Any special date/time formats it detected.\n- `Prompt`: This is extremely useful! It gives you a `read_csv` command _with_ all the detected options explicitly set. You can copy, paste, and modify this as needed.\nRunning `sniff_csv` first can save you significant guesswork when an import fails. If the detected `Delimiter` is wrong, or it thinks `HasHeader` is true when it isn't, you know exactly which options to override in your `read_csv` call.\n### **How the Sniffer Works**\nDuckDB's CSV sniffer actually operates through multiple phases to determine the best way to read your file:\n1. **Dialect Detection**: At the time of writing, sniffer tests 24 different combinations of dialect configurations (delimiters, quotes, escapes, newlines) to see which one creates the most consistent number of columns across rows.\n2. **Type Detection**: After determining the dialect, the sniffer analyzes the first chunk of data (2048 rows by default) to detect column types, trying to cast values from most to least specific types (SQLNULL → BOOLEAN → BIGINT → DOUBLE → TIME → DATE → TIMESTAMP → VARCHAR).\n3. **Header Detection**: The sniffer checks if the first valid line can be cast to the detected column types. If it can't, that line is considered a header.\n4. **Type Replacement**: If you specified column types, they override the sniffer's detected types.\n5. **Type Refinement**: The sniffer validates the detected types on more data using vectorized casting.\n**Here's a code example showing how to inspect what the sniffer sees in a more complex scenario:**\n```hljs sql\n-- Examine what the sniffer detects with a larger sample size\nSELECT\n    Delimiter, Quote, Escape, SkipRows, HasHeader, DateFormat, TimestampFormat\nFROM sniff_csv('events.csv',  sample_size=50000);\n-- To see the detected column types\nSELECT unnest(Columns)\nFROM sniff_csv('events.csv');\n```\nWhen I was working with a dataset containing 20+ columns of mixed types, the `unnest(Columns)` trick was particularly helpful to see exactly which columns were being detected as which types, saving a ton of back-and-forth troubleshooting."
        },
        {
          "type": "section",
          "title": "**Wrangling the Errors: ignore\\_errors, store\\_rejects, and More**",
          "content": "So `sniff_csv` looks good, but your file _still_ has issues—maybe just a few problematic rows scattered throughout millions of good ones. By default, DuckDB will halt the import on the first error. But often, you just want the valid data and to deal with the bad rows separately.\n### **Option 1: Just Skip 'Em ( `ignore_errors`)**\nThe simplest approach is to tell DuckDB to skip rows that cause parsing or casting errors using `ignore_errors = true`.\nLet's imagine a file [`faulty_folks.csv`](http://duckdb-example-files.s3-website-us-east-1.amazonaws.com/2025-blog-post-taming-wild-csvs/faulty_folks.csv):\n```hljs txt\nName,Age\nAlice,30\nBob,forty-two\nCharlie,35\n```\nTrying to read this normally with explicit types will fail on Bob's age:\n```hljs sql\n-- This will error out!\nSELECT * FROM read_csv('faulty_folks.csv', header=true, columns={'Name':'VARCHAR', 'Age':'INTEGER'});\n```\nBut if we just want Alice and Charlie:\n```hljs sql\nSELECT * FROM read_csv('faulty_folks.csv',\n    header = true,\n    -- Specify expected types\n    columns = {'Name': 'VARCHAR', 'Age': 'INTEGER'},\n    ignore_errors = true  -- The key part!\n    );\n```\n**Explanation:**\n- We define the `columns` we expect, including the `INTEGER` type for `Age`.\n- `ignore_errors = true` tells the reader: if you hit a row where 'Age' can't become an `INTEGER` (like \"forty-two\"), just drop that row and keep going.\n**Output:**\n| Name | Age |\n| --- | --- |\n| Alice | 30 |\n| Charlie | 35 |\nBob gets left behind, but the import succeeds with the valid rows. This approach skips rows with various issues: casting errors, wrong number of columns, unescaped quotes, etc.\n### **Option 2: Skip and Store (store\\_rejects)**\nIgnoring errors is okay, but generally, you need to know _what_ went wrong and _which_ rows were rejected. Maybe you need to fix the source data or report the issues. This is where `store_rejects = true` becomes invaluable.\nWhen you use [`store_rejects`](https://duckdb.org/docs/stable/data/csv/overview.html), DuckDB still skips the bad rows (like `ignore_errors`), but it also logs detailed information about each rejected row and the error encountered into two temporary tables: `reject_scans` and `reject_errors`.\n```hljs sql\n-- Read the file, storing rejected rows\nSELECT * FROM read_csv(\n    'faulty_folks.csv',\n    header = true,\n    columns = {'Name': 'VARCHAR', 'Age': 'INTEGER'},\n    store_rejects = true -- Store info about errors\n    -- Optional: Customize table names and limit\n    -- rejects_scan = 'my_scan_info',\n    -- rejects_table = 'my_rejected_rows',\n    -- rejects_limit = 100 -- Store max 100 errors per file\n);\n-- Now, let's see what was rejected\nFROM reject_errors;\n-- And details about the scan itself\nFROM reject_scans;\n```\n**Explanation:**\n1. The `read_csv` call runs, skips Bob's row, and returns Alice and Charlie just like before.\n2. The key difference: `store_rejects = true` populates the temporary tables.\n3. `FROM reject_errors;` shows details about the failed rows:\n   - `scan_id`, `file_id`: Link back to the specific scan/file.\n   - `line`: The original line number in the CSV.\n   - `column_idx`, `column_name`: Which column had the issue (if applicable).\n   - `error_type`: The category of error (e.g., `CAST`, `TOO_MANY_COLUMNS`).\n   - `csv_line`: The actual content of the rejected line.\n   - `error_message`: The specific error message DuckDB generated.\n4. `FROM reject_scans;` gives metadata about the `read_csv` operation itself (delimiter, quote rule, schema used, file path, etc.).\nI've found this incredibly useful for debugging dirty data. You get the clean data loaded _and_ a detailed report on the rejects, all within DuckDB. No more grep-ing through massive files trying to find that one problematic line!\n### **Option 3: Relaxing the Rules (strict\\_mode=false and null\\_padding=true)**\nSometimes, you just want to _get the data in_, even if it’s a little messy. That’s where DuckDB's more forgiving CSV parsing options can help you out. **`strict_mode = false`** option tells DuckDB to loosen up its parsing expectations. It will _try_ to read rows even if they contain typical formatting problems like:\n- Unescaped quote characters in fields (e.g., `\"15\" Laptop\"`).\n- Rows with _more_ columns than defined (DuckDB just drops the extras).\n- Mixed newline formats (like mixing `\\n` and `\\r\\n`).\nWARNING: fast, but not precise\nWhen you set `strict_mode=false`, you’re trusting DuckDB to make its best guess. That works great when you want results fast—but double-check the output if data precision matters!\nAnother commonly used option is **`null_padding = true,`** which handles rows that come up _short_, meaning they have fewer columns than expected. Instead of throwing an error, DuckDB just fills in the blanks with `NULL`.\nLet’s look at an example. Here's a messy CSV file named [`inventory.csv`](http://duckdb-example-files.s3-website-us-east-1.amazonaws.com/2025-blog-post-taming-wild-csvs/inventory.csv):\n```hljs txt\nItemID,Description,Price\n101,\"15\" Laptop\",999.99\n102,\"Wireless Mouse\"\n103,\"Mechanical Keyboard\",129.99,ExtraField\n```\nThis file includes:\n- An unescaped quote in the first row’s description\n- A missing price in the second row\n- An extra column in the third row\nTry reading it normally:\n```hljs sql\nFROM read_csv('inventory.csv');\n```\nDuckDB will skip all lines except the last.\n![DuckDB CLI image](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fimage1_7ef2565c8e.png&w=3840&q=75)\nBut with relaxed settings:\n```hljs sql\n-- Parsing a messy CSV while gracefully handling missing and extra fields\nFROM read_csv('inventory.csv',\n    strict_mode = false,   -- Forgive formatting quirks\n    null_padding = true   -- Fill missing columns with NULLs\n);\n```\n**Resulting Table:**\n| ItemID | Description | Price | column3 |\n| --- | --- | --- | --- |\n| 101 | 15 Laptop | 999.99 | NULL |\n| 102 | Wireless Mouse | NULL | NULL |\n| 103 | Mechanical Keyboard | 129.99 | ExtraField |"
        },
        {
          "type": "section",
          "title": "**Handling Shifting Schemas: union\\_by\\_name**",
          "content": "Here's another common headache: you have multiple CSV files to load (e.g., monthly reports), but the columns aren't _quite_ the same across files. Maybe a column was added in March, or the order changed in June. Trying to read them together with a simple `read_csv('monthly_report_*.csv')` might fail or produce misaligned data.\nDuckDB's `union_by_name = true` option handles this elegantly. When reading multiple files (using globs or lists), it aligns columns based on their _header names_ rather than their position. If a file is missing a column found in other files, it fills it with `NULL`.\nImagine [`report_jan.csv`](http://duckdb-example-files.s3-website-us-east-1.amazonaws.com/2025-blog-post-taming-wild-csvs/report_jan.csv):\n```hljs txt\nUserID,MetricA,MetricB\n1,10,100\n2,15,110\n```\nAnd [`report_feb.csv`](http://duckdb-example-files.s3-website-us-east-1.amazonaws.com/2025-blog-post-taming-wild-csvs/report_feb.csv):\n```hljs txt\nUserID,MetricB,MetricC,MetricA\n3,120,xyz,20\n4,125,abc,25\n```\nNotice the different order and the new `MetricC` in February.\n```hljs sql\nSELECT *\nFROM read_csv(\n    ['report_jan.csv', 'report_feb.csv'], -- List of files (or glob)\n    union_by_name = true -- The magic!\n);\n```\n**Explanation:**\n- DuckDB reads the headers from all files involved.\n- It creates a combined schema containing _all_ unique column names ( `UserID`, `MetricA`, `MetricB`, `MetricC`).\n- For each file, it matches the data to the combined schema based on the header names found _in that specific file_.\n- Where a column doesn't exist in a file (like `MetricC` in `report_jan.csv`), it inserts `NULL`.\n**Output:**\n| UserID | MetricA | MetricB | MetricC |\n| --- | --- | --- | --- |\n| 1 | 10 | 100 | NULL |\n| 2 | 15 | 110 | NULL |\n| 3 | 20 | 120 | xyz |\n| 4 | 25 | 125 | Abc |"
        },
        {
          "type": "section",
          "title": "**Fine-Tuning Detection and Overrides**",
          "content": "While auto-detection is great, sometimes you know better, or the sample DuckDB takes isn't quite representative. Here are some ways to fine-tune the process:\n**Bigger Sample:** If type detection seems off (e.g., a column that's mostly integers but has a few floats later gets detected as `BIGINT`), try increasing the sample size:\n```hljs sql\nSELECT * FROM read_csv('file.csv', sample_size = 50000);\n-- Or scan the whole file (can be slow for huge files)\nSELECT * FROM read_csv('file.csv', sample_size = -1);\n```\n**Manual Types:** Override specific column types if detection gets it wrong or if you want a different type:\n```hljs sql\n-- Override by name\nSELECT * FROM read_csv('file.csv',\n  types = {'UserID': 'VARCHAR', 'TransactionAmount': 'DOUBLE'});\n-- Or by position if no headers\nSELECT * FROM read_csv('file.csv', header = false,\n  types = ['VARCHAR', 'DOUBLE', 'DATE']);\n```\n**Force Header/No Header:** If header detection fails (common if all columns look like strings):\n```hljs sql\n-- Force header presence\nSELECT * FROM read_csv('file.csv', header = true);\n-- Or no header with custom names\nSELECT * FROM read_csv('file.csv',\n header = false,\n names = ['colA', 'colB', 'colC']);\n```\n**Date/Timestamp Formats:** If dates aren't ISO 8601 ( `YYYY-MM-DD`) or times aren't standard:\n```hljs sql\n SELECT * FROM read_csv('file.csv',\n  dateformat = '%m/%d/%Y',\n  timestampformat = '%Y-%m-%dT%H:%M:%S.%f');\n```\n**Everything is a String:** If you want to load _everything_ as `VARCHAR` and deal with types later:\n```hljs sql\nSELECT * FROM read_csv('file.csv', all_varchar = true);\n```\n**Which Columns Can Be NULL?:** By default, an empty field is treated as `NULL`. If empty strings should be valid values:\n```hljs sql\nSELECT * FROM read_csv('file.csv',\n  force_not_null = ['column_name1', 'column_name2']);\n```\n**Clean Up Names:** Got headers with spaces or weird characters?\n```hljs sql\nSELECT * FROM read_csv('file.csv', normalize_names = true);\n```\nThis will [automatically clean them up](https://duckdb.org/docs/stable/data/csv/overview.html#parameters) (replacing non-alphanumeric with `_`, etc.) during import."
        },
        {
          "type": "section",
          "title": "DuckDB's CSV Parser: Champion of the Pollock Benchmark",
          "content": "For those really interested in CSV robustness, there's an intriguing benchmark called [Pollock](https://hpi.de/naumann/projects/data-preparation/pollock.html) that evaluates how well different systems handle non-standard CSV files. The creators studied over 245,000 public CSV datasets to identify common violations of the RFC-4180 standard, then created test files with these issues.\nIn recent testing, DuckDB [ranked #1](https://github.com/HPI-Information-Systems/Pollock) in the benchmark when configured to handle problematic files, correctly reading 99.61% of the data across all test files. Even in auto-detect mode with minimal configuration, DuckDB still managed to read about 90.75% of the data correctly.\nThis is practical validation that the approaches we've covered in this article can handle the vast majority of real-world CSV issues you'll encounter.\n| System under test | Pollock score<br>(simple) | Pollock score<br>(weighted) |\n| --- | --- | --- |\n| DuckDB 1.2 | 9.961 | 9.599 |\n| SQLite 3.39.0 | 9.955 | 9.375 |\n| UniVocity 2.9.1 | 9.939 | 7.936 |\n| LibreOffice Calc 7.3.6 | 9.925 | 7.833 |\n| SpreadDesktop | 9.929 | 9.597 |\n| SpreadWeb | 9.721 | 9.431 |\n| Python native csv 3.10.5 | 9.721 | 9.436 |\n| Pandas 1.4.3 | 9.895 | 9.431 |\n| MySQL 8.0.31 | 9.587 | 7.484 |\n| Mariadb 10.9.3 | 9.585 | 7.483 |"
        },
        {
          "type": "section",
          "title": "**Taking Flight Beyond the Basics**",
          "content": "We've covered quite a bit in our journey through DuckDB's CSV capabilities—from diagnosing issues with `sniff_csv` to handling errors with `ignore_errors` and `store_rejects`, merging inconsistent schemas with `union_by_name`, and fine-tuning the whole process with various overrides.\nWhat I've come to appreciate about DuckDB is that its CSV reader isn't just a basic loader—it's a sophisticated tool designed to handle real-world data messiness directly within SQL. Most data tools can handle the perfect CSV file, but it's how they deal with the imperfect ones that really matters in day-to-day work.\nBy understanding these slightly more advanced options, you can often avoid external preprocessing steps, keeping your data loading logic right within your SQL workflow. The result is cleaner pipelines that are less likely to waddle when faced with unexpected CSV quirks.\nThe next time a tricky CSV lands on your desk, remember these techniques. They might just save you some time and frustration, letting you get back to the more interesting parts of data analysis sooner. Happy querying!\n###### TABLE OF CONTENTS\n[Peeking Under the Hood: sniff\\_csv](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#peeking-under-the-hood-sniffcsv)\n[Wrangling the Errors: ignore\\_errors, store\\_rejects, and More](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#wrangling-the-errors-ignoreerrors-storerejects-and-more)\n[Handling Shifting Schemas: union\\_by\\_name](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#handling-shifting-schemas-unionbyname)\n[Fine-Tuning Detection and Overrides](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#fine-tuning-detection-and-overrides)\n[DuckDB's CSV Parser: Champion of the Pollock Benchmark](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#duckdbs-csv-parser-champion-of-the-pollock-benchmark)\n[Taking Flight Beyond the Basics](https://motherduck.com/blog/taming-wild-csvs-with-duckdb-data-engineering/#taking-flight-beyond-the-basics)\nStart using MotherDuck now!\n[Try 21 Days Free](https://motherduck.com/get-started/)\nGet Started\n![blog subscription icon](https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fblog-subscription-icon.67ccd5ae.png&w=828&q=75)"
        },
        {
          "type": "hero",
          "h1": "Subscribe to motherduck blog",
          "sub": "",
          "cta": "",
          "content": "E-mail\nSubscribe to other MotherDuck Updates\nSubmit"
        },
        {
          "type": "section",
          "title": "PREVIOUS POSTS",
          "content": "[![MotherDuck lands on Tableau Cloud: Live, Fast Analytics Unleashed](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2FTableau_Cloud_52bd53b821.png&w=3840&q=75)](https://motherduck.com/blog/tableau-cloud-motherduck/)\n[2025/05/06 - Jacob Matson](https://motherduck.com/blog/tableau-cloud-motherduck/)\n### [MotherDuck lands on Tableau Cloud: Live, Fast Analytics Unleashed](https://motherduck.com/blog/tableau-cloud-motherduck)\nUse MotherDuck to power your Tableau Cloud, Server, and Desktop dashboards.\n[![DuckDB Ecosystem: May 2025](https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fduckdbeco_may_ca294a4d7f.png&w=3840&q=75)](https://motherduck.com/blog/duckdb-ecosystem-newsletter-may-2025/)\n[2025/05/08 - Simon Späti](https://motherduck.com/blog/duckdb-ecosystem-newsletter-may-2025/)\n### [DuckDB Ecosystem: May 2025](https://motherduck.com/blog/duckdb-ecosystem-newsletter-may-2025)\nDuckDB Monthly #29: From Metabase to Doom, DuckDB powers everything.\n[View all](https://motherduck.com/blog/)"
        }
      ],
      "images": [
        "https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fimage1_7ef2565c8e.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fblog-subscription-icon.67ccd5ae.png&amp;w=828&amp;q=75",
        "https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2FTableau_Cloud_52bd53b821.png&amp;w=3840&amp;q=75",
        "https://motherduck.com/_next/image/?url=https%3A%2F%2Fmotherduck-com-web-prod.s3.amazonaws.com%2Fassets%2Fimg%2Fduckdbeco_may_ca294a4d7f.png&amp;w=3840&amp;q=75"
      ]
    }
  ],
  "assetsPolicy": {
    "useOriginalImages": true,
    "rewriteText": false
  }
}